{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Dropbox\\\\CODING\\\\EcommerceChatbot\\\\frontend\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, TextField, Button, Paper, Typography, IconButton, CircularProgress, List, ListItem, ListItemText, Divider, AppBar, Toolbar, Menu, MenuItem } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const messagesEndRef = useRef(null);\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const recognitionRef = useRef(null);\n  const formatVoiceCommand = transcript => {\n    // Convert transcript to lowercase for easier matching\n    const command = transcript.toLowerCase().trim();\n\n    // Handle different command patterns\n    if (command.includes('add product') || command.includes('create product')) {\n      // Extract product details using regex\n      const pattern = /(?:add|create) product:?\\s*([^,]+),\\s*(\\d+\\.?\\d*),\\s*(\\d+),\\s*([^,]+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        const [_, name, price, stock, category] = match;\n        return `Add product: ${name.trim()}, ${price}, ${stock}, ${category.trim()}`;\n      }\n    }\n    if (command.includes('update product') || command.includes('modify product')) {\n      const pattern = /(?:update|modify) product:?\\s*([^,]+),\\s*([^,]+),\\s*([^,]+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        const [_, name, field, value] = match;\n        return `Update product: ${name.trim()}, ${field.trim()}, ${value.trim()}`;\n      }\n    }\n    if (command.includes('delete product') || command.includes('remove product')) {\n      const pattern = /(?:delete|remove) product:?\\s*([^,]+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        return `Delete product: ${match[1].trim()}`;\n      }\n    }\n    if (command.includes('search')) {\n      const pattern = /search\\s+(.+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        return `Search ${match[1].trim()}`;\n      }\n    }\n    if (command.includes('category')) {\n      const pattern = /category\\s+(.+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        return `Category ${match[1].trim()}`;\n      }\n    }\n    if (command.includes('show all') || command.includes('list all')) {\n      return 'Show all products';\n    }\n\n    // If no specific command pattern is matched, return the original transcript\n    return command;\n  };\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      recognitionRef.current = new window.webkitSpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n        const formattedCommand = formatVoiceCommand(transcript);\n        setInput(formattedCommand);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsRecording(false);\n      };\n      recognitionRef.current.onend = () => {\n        setIsRecording(false);\n        if (input.trim()) {\n          handleSend();\n        }\n      };\n    }\n\n    // Load chat history when component mounts\n    const loadChatHistory = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/chat/history', {\n          credentials: 'include'\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data.history && data.history.length > 0) {\n            setMessages(data.history);\n          } else {\n            // Welcome message with improved styling\n            setMessages([{\n              type: 'bot',\n              content: `👋 Welcome ${user === null || user === void 0 ? void 0 : user.username} to the Sales Chatbot!\\n\\n` + 'I\\'m your AI-powered shopping assistant. Here\\'s what I can help you with:\\n\\n' + '📦 Product Management:\\n' + '   • Add product: [name], [price], [stock], [category]\\n' + '   • Update product: [name], [field], [new value]\\n' + '   • Delete product: [name]\\n\\n' + '🔍 Search & View:\\n' + '   • Search [product name]\\n' + '   • Category [category]\\n' + '   • Show all products\\n\\n' + '🎤 Voice Commands:\\n' + '   • Click the microphone icon to use voice input\\n' + '   • Speak your command clearly\\n' + '   • Click again to stop recording\\n\\n' + '💡 Tips:\\n' + '   • Use clear, specific commands\\n' + '   • Prices should be numbers\\n' + '   • Stock should be whole numbers\\n' + '   • Categories help organize products\\n\\n' + 'How can I assist you today? 😊'\n            }]);\n          }\n        }\n      } catch (error) {\n        console.error('Error loading chat history:', error);\n      }\n    };\n    loadChatHistory();\n  }, [user]);\n\n  // Save chat history whenever messages change\n  useEffect(() => {\n    const saveChatHistory = async () => {\n      if (messages.length > 0) {\n        try {\n          await fetch('http://localhost:5000/api/chat/history', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              messages\n            }),\n            credentials: 'include'\n          });\n        } catch (error) {\n          console.error('Error saving chat history:', error);\n        }\n      }\n    };\n    saveChatHistory();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n  const handleLogout = async () => {\n    try {\n      await logout();\n      navigate('/login');\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: userMessage\n    }]);\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage\n        }),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: data.response\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleRecording = () => {\n    if (!recognitionRef.current) {\n      alert('Speech recognition is not supported in your browser.');\n      return;\n    }\n    if (isRecording) {\n      recognitionRef.current.stop();\n      setIsRecording(false);\n    } else {\n      setInput(''); // Clear input before starting new recording\n      recognitionRef.current.start();\n      setIsRecording(true);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      bgcolor: '#0A1929',\n      background: 'linear-gradient(135deg, #0A1929 0%, #1A237E 100%)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        bgcolor: 'rgba(13, 71, 161, 0.95)',\n        backdropFilter: 'blur(10px)',\n        boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\n        borderBottom: '1px solid rgba(255, 255, 255, 0.1)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              fontWeight: 600,\n              background: 'linear-gradient(45deg, #64B5F6 30%, #90CAF9 90%)',\n              WebkitBackgroundClip: 'text',\n              WebkitTextFillColor: 'transparent',\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"robot\",\n              style: {\n                fontSize: '1.5rem'\n              },\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), \"Sales Chatbot\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: handleMenuClick,\n          sx: {\n            ml: 2,\n            '&:hover': {\n              bgcolor: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          anchorEl: anchorEl,\n          open: Boolean(anchorEl),\n          onClose: handleMenuClose,\n          sx: {\n            '& .MuiPaper-root': {\n              bgcolor: 'rgba(13, 71, 161, 0.95)',\n              backdropFilter: 'blur(10px)',\n              border: '1px solid rgba(255, 255, 255, 0.1)',\n              minWidth: '200px'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleMenuClose,\n            disabled: true,\n            sx: {\n              color: '#90CAF9'\n            },\n            children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), user === null || user === void 0 ? void 0 : user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 1,\n              bgcolor: 'rgba(255, 255, 255, 0.1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleLogout,\n            sx: {\n              color: '#FF4081',\n              '&:hover': {\n                bgcolor: 'rgba(255, 64, 129, 0.1)'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(LogoutIcon, {\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this), \"Logout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        bgcolor: 'rgba(13, 71, 161, 0.05)',\n        backdropFilter: 'blur(10px)',\n        borderRadius: 0,\n        position: 'relative',\n        '&::before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          background: 'radial-gradient(circle at top right, rgba(25, 118, 210, 0.1) 0%, transparent 60%)',\n          pointerEvents: 'none'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          flex: 1,\n          overflow: 'auto',\n          p: 2,\n          '& > *': {\n            mb: 2\n          },\n          '&::-webkit-scrollbar': {\n            width: '8px'\n          },\n          '&::-webkit-scrollbar-track': {\n            background: 'rgba(255, 255, 255, 0.05)'\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: 'rgba(255, 255, 255, 0.1)',\n            borderRadius: '4px'\n          },\n          '&::-webkit-scrollbar-thumb:hover': {\n            background: 'rgba(255, 255, 255, 0.2)'\n          }\n        },\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            flexDirection: 'column',\n            alignItems: message.type === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'flex-start',\n              gap: 1,\n              maxWidth: '80%'\n            },\n            children: [message.type === 'bot' && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 32,\n                height: 32,\n                borderRadius: '50%',\n                bgcolor: 'rgba(25, 118, 210, 0.9)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexShrink: 0,\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"robot\",\n                style: {\n                  fontSize: '1.2rem'\n                },\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 1,\n              sx: {\n                p: 2,\n                bgcolor: message.type === 'user' ? 'rgba(25, 118, 210, 0.9)' : 'rgba(13, 71, 161, 0.9)',\n                color: '#FFFFFF',\n                borderRadius: 2,\n                border: '1px solid rgba(255, 255, 255, 0.1)',\n                boxShadow: '0 2px 8px rgba(0, 0, 0, 0.2)',\n                position: 'relative',\n                '&::before': {\n                  content: '\"\"',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  background: 'linear-gradient(45deg, rgba(255, 255, 255, 0.05) 0%, transparent 100%)',\n                  borderRadius: 'inherit',\n                  pointerEvents: 'none'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-line',\n                  fontFamily: 'Consolas, monospace',\n                  fontSize: '0.95rem',\n                  lineHeight: 1.6\n                },\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 33\n            }, this), message.type === 'user' && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 32,\n                height: 32,\n                borderRadius: '50%',\n                bgcolor: 'rgba(25, 118, 210, 0.9)',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexShrink: 0,\n                mt: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n                sx: {\n                  color: '#FFFFFF'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          bgcolor: 'rgba(255, 255, 255, 0.1)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: 'rgba(13, 71, 161, 0.95)',\n          display: 'flex',\n          gap: 1,\n          borderTop: '1px solid rgba(255, 255, 255, 0.1)',\n          position: 'relative',\n          '&::before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            height: '1px',\n            background: 'linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          disabled: loading,\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              bgcolor: 'rgba(255, 255, 255, 0.05)',\n              color: '#FFFFFF',\n              '& fieldset': {\n                borderColor: 'rgba(255, 255, 255, 0.1)'\n              },\n              '&:hover fieldset': {\n                borderColor: 'rgba(255, 255, 255, 0.2)'\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#64B5F6'\n              }\n            },\n            '& .MuiInputLabel-root': {\n              color: 'rgba(255, 255, 255, 0.7)'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: toggleRecording,\n          color: isRecording ? 'error' : 'primary',\n          sx: {\n            bgcolor: 'rgba(255, 255, 255, 0.05)',\n            '&:hover': {\n              bgcolor: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          children: isRecording ? /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSend,\n          disabled: loading || !input.trim(),\n          endIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 77\n          }, this),\n          sx: {\n            minWidth: '100px',\n            bgcolor: 'rgba(25, 118, 210, 0.9)',\n            '&:hover': {\n              bgcolor: 'rgba(25, 118, 210, 1)'\n            },\n            '&.Mui-disabled': {\n              bgcolor: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          children: loading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"CEAgYzQwlPenKjYsLbr2oSkApf8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","TextField","Button","Paper","Typography","IconButton","CircularProgress","List","ListItem","ListItemText","Divider","AppBar","Toolbar","Menu","MenuItem","SendIcon","MicIcon","StopIcon","LogoutIcon","AccountCircleIcon","useAuth","useNavigate","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","input","setInput","loading","setLoading","isRecording","setIsRecording","anchorEl","setAnchorEl","messagesEndRef","user","logout","navigate","recognitionRef","formatVoiceCommand","transcript","command","toLowerCase","trim","includes","pattern","match","_","name","price","stock","category","field","value","window","current","webkitSpeechRecognition","continuous","interimResults","onresult","event","Array","from","results","map","result","join","formattedCommand","onerror","console","error","onend","handleSend","loadChatHistory","response","fetch","credentials","ok","data","json","history","length","type","content","username","saveChatHistory","method","headers","body","JSON","stringify","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","handleMenuClick","currentTarget","handleMenuClose","handleLogout","userMessage","prev","message","Error","toggleRecording","alert","stop","start","handleKeyPress","e","key","shiftKey","preventDefault","sx","height","display","flexDirection","bgcolor","background","children","position","backdropFilter","boxShadow","borderBottom","alignItems","flexGrow","variant","component","fontWeight","WebkitBackgroundClip","WebkitTextFillColor","gap","role","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","ml","open","Boolean","onClose","border","minWidth","disabled","mr","my","elevation","flex","overflow","borderRadius","top","left","right","bottom","pointerEvents","p","mb","width","index","maxWidth","justifyContent","flexShrink","mt","whiteSpace","fontFamily","lineHeight","ref","borderTop","fullWidth","placeholder","onChange","target","onKeyPress","borderColor","endIcon","size","_c","$RefreshReg$"],"sources":["C:/Users/singh/Dropbox/CODING/EcommerceChatbot/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    IconButton,\r\n    CircularProgress,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n    AppBar,\r\n    Toolbar,\r\n    Menu,\r\n    MenuItem,\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport StopIcon from '@mui/icons-material/Stop';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ChatInterface = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const messagesEndRef = useRef(null);\r\n    const { user, logout } = useAuth();\r\n    const navigate = useNavigate();\r\n    const recognitionRef = useRef(null);\r\n\r\n    const formatVoiceCommand = (transcript) => {\r\n        // Convert transcript to lowercase for easier matching\r\n        const command = transcript.toLowerCase().trim();\r\n        \r\n        // Handle different command patterns\r\n        if (command.includes('add product') || command.includes('create product')) {\r\n            // Extract product details using regex\r\n            const pattern = /(?:add|create) product:?\\s*([^,]+),\\s*(\\d+\\.?\\d*),\\s*(\\d+),\\s*([^,]+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                const [_, name, price, stock, category] = match;\r\n                return `Add product: ${name.trim()}, ${price}, ${stock}, ${category.trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('update product') || command.includes('modify product')) {\r\n            const pattern = /(?:update|modify) product:?\\s*([^,]+),\\s*([^,]+),\\s*([^,]+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                const [_, name, field, value] = match;\r\n                return `Update product: ${name.trim()}, ${field.trim()}, ${value.trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('delete product') || command.includes('remove product')) {\r\n            const pattern = /(?:delete|remove) product:?\\s*([^,]+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                return `Delete product: ${match[1].trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('search')) {\r\n            const pattern = /search\\s+(.+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                return `Search ${match[1].trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('category')) {\r\n            const pattern = /category\\s+(.+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                return `Category ${match[1].trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('show all') || command.includes('list all')) {\r\n            return 'Show all products';\r\n        }\r\n        \r\n        // If no specific command pattern is matched, return the original transcript\r\n        return command;\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Initialize speech recognition\r\n        if ('webkitSpeechRecognition' in window) {\r\n            recognitionRef.current = new window.webkitSpeechRecognition();\r\n            recognitionRef.current.continuous = true;\r\n            recognitionRef.current.interimResults = true;\r\n\r\n            recognitionRef.current.onresult = (event) => {\r\n                const transcript = Array.from(event.results)\r\n                    .map(result => result[0])\r\n                    .map(result => result.transcript)\r\n                    .join('');\r\n                \r\n                const formattedCommand = formatVoiceCommand(transcript);\r\n                setInput(formattedCommand);\r\n            };\r\n\r\n            recognitionRef.current.onerror = (event) => {\r\n                console.error('Speech recognition error:', event.error);\r\n                setIsRecording(false);\r\n            };\r\n\r\n            recognitionRef.current.onend = () => {\r\n                setIsRecording(false);\r\n                if (input.trim()) {\r\n                    handleSend();\r\n                }\r\n            };\r\n        }\r\n\r\n        // Load chat history when component mounts\r\n        const loadChatHistory = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/chat/history', {\r\n                    credentials: 'include'\r\n                });\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    if (data.history && data.history.length > 0) {\r\n                        setMessages(data.history);\r\n                    } else {\r\n                        // Welcome message with improved styling\r\n                        setMessages([{\r\n                            type: 'bot',\r\n                            content: `👋 Welcome ${user?.username} to the Sales Chatbot!\\n\\n` +\r\n                                'I\\'m your AI-powered shopping assistant. Here\\'s what I can help you with:\\n\\n' +\r\n                                '📦 Product Management:\\n' +\r\n                                '   • Add product: [name], [price], [stock], [category]\\n' +\r\n                                '   • Update product: [name], [field], [new value]\\n' +\r\n                                '   • Delete product: [name]\\n\\n' +\r\n                                '🔍 Search & View:\\n' +\r\n                                '   • Search [product name]\\n' +\r\n                                '   • Category [category]\\n' +\r\n                                '   • Show all products\\n\\n' +\r\n                                '🎤 Voice Commands:\\n' +\r\n                                '   • Click the microphone icon to use voice input\\n' +\r\n                                '   • Speak your command clearly\\n' +\r\n                                '   • Click again to stop recording\\n\\n' +\r\n                                '💡 Tips:\\n' +\r\n                                '   • Use clear, specific commands\\n' +\r\n                                '   • Prices should be numbers\\n' +\r\n                                '   • Stock should be whole numbers\\n' +\r\n                                '   • Categories help organize products\\n\\n' +\r\n                                'How can I assist you today? 😊'\r\n                        }]);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error loading chat history:', error);\r\n            }\r\n        };\r\n\r\n        loadChatHistory();\r\n    }, [user]);\r\n\r\n    // Save chat history whenever messages change\r\n    useEffect(() => {\r\n        const saveChatHistory = async () => {\r\n            if (messages.length > 0) {\r\n                try {\r\n                    await fetch('http://localhost:5000/api/chat/history', {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify({ messages }),\r\n                        credentials: 'include'\r\n                    });\r\n                } catch (error) {\r\n                    console.error('Error saving chat history:', error);\r\n                }\r\n            }\r\n        };\r\n\r\n        saveChatHistory();\r\n    }, [messages]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const handleMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await logout();\r\n            navigate('/login');\r\n        } catch (error) {\r\n            console.error('Logout failed:', error);\r\n        }\r\n    };\r\n\r\n    const handleSend = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = input.trim();\r\n        setInput('');\r\n        setMessages(prev => [...prev, { type: 'user', content: userMessage }]);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ message: userMessage }),\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to get response');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setMessages(prev => [...prev, { type: 'bot', content: data.response }]);\r\n        } catch (error) {\r\n            setMessages(prev => [...prev, {\r\n                type: 'bot',\r\n                content: 'Sorry, I encountered an error. Please try again.'\r\n            }]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const toggleRecording = () => {\r\n        if (!recognitionRef.current) {\r\n            alert('Speech recognition is not supported in your browser.');\r\n            return;\r\n        }\r\n\r\n        if (isRecording) {\r\n            recognitionRef.current.stop();\r\n            setIsRecording(false);\r\n        } else {\r\n            setInput(''); // Clear input before starting new recording\r\n            recognitionRef.current.start();\r\n            setIsRecording(true);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSend();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                bgcolor: '#0A1929',\r\n                background: 'linear-gradient(135deg, #0A1929 0%, #1A237E 100%)',\r\n            }}\r\n        >\r\n            <AppBar \r\n                position=\"static\" \r\n                sx={{ \r\n                    bgcolor: 'rgba(13, 71, 161, 0.95)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.3)',\r\n                    borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\r\n                        <Typography \r\n                            variant=\"h6\" \r\n                            component=\"div\" \r\n                            sx={{ \r\n                                fontWeight: 600,\r\n                                background: 'linear-gradient(45deg, #64B5F6 30%, #90CAF9 90%)',\r\n                                WebkitBackgroundClip: 'text',\r\n                                WebkitTextFillColor: 'transparent',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                gap: 1,\r\n                            }}\r\n                        >\r\n                            <span role=\"img\" aria-label=\"robot\" style={{ fontSize: '1.5rem' }}>🤖</span>\r\n                            Sales Chatbot\r\n                        </Typography>\r\n                    </Box>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={handleMenuClick}\r\n                        sx={{ \r\n                            ml: 2,\r\n                            '&:hover': {\r\n                                bgcolor: 'rgba(255, 255, 255, 0.1)',\r\n                            },\r\n                        }}\r\n                    >\r\n                        <AccountCircleIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                        anchorEl={anchorEl}\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleMenuClose}\r\n                        sx={{\r\n                            '& .MuiPaper-root': {\r\n                                bgcolor: 'rgba(13, 71, 161, 0.95)',\r\n                                backdropFilter: 'blur(10px)',\r\n                                border: '1px solid rgba(255, 255, 255, 0.1)',\r\n                                minWidth: '200px',\r\n                            },\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={handleMenuClose} disabled sx={{ color: '#90CAF9' }}>\r\n                            <AccountCircleIcon sx={{ mr: 1 }} />\r\n                            {user?.username}\r\n                        </MenuItem>\r\n                        <Divider sx={{ my: 1, bgcolor: 'rgba(255, 255, 255, 0.1)' }} />\r\n                        <MenuItem \r\n                            onClick={handleLogout}\r\n                            sx={{\r\n                                color: '#FF4081',\r\n                                '&:hover': {\r\n                                    bgcolor: 'rgba(255, 64, 129, 0.1)',\r\n                                },\r\n                            }}\r\n                        >\r\n                            <LogoutIcon sx={{ mr: 1 }} />\r\n                            Logout\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Paper\r\n                elevation={3}\r\n                sx={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'rgba(13, 71, 161, 0.05)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    borderRadius: 0,\r\n                    position: 'relative',\r\n                    '&::before': {\r\n                        content: '\"\"',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        background: 'radial-gradient(circle at top right, rgba(25, 118, 210, 0.1) 0%, transparent 60%)',\r\n                        pointerEvents: 'none',\r\n                    },\r\n                }}\r\n            >\r\n                <List\r\n                    sx={{\r\n                        flex: 1,\r\n                        overflow: 'auto',\r\n                        p: 2,\r\n                        '& > *': { mb: 2 },\r\n                        '&::-webkit-scrollbar': {\r\n                            width: '8px',\r\n                        },\r\n                        '&::-webkit-scrollbar-track': {\r\n                            background: 'rgba(255, 255, 255, 0.05)',\r\n                        },\r\n                        '&::-webkit-scrollbar-thumb': {\r\n                            background: 'rgba(255, 255, 255, 0.1)',\r\n                            borderRadius: '4px',\r\n                        },\r\n                        '&::-webkit-scrollbar-thumb:hover': {\r\n                            background: 'rgba(255, 255, 255, 0.2)',\r\n                        },\r\n                    }}\r\n                >\r\n                    {messages.map((message, index) => (\r\n                        <ListItem\r\n                            key={index}\r\n                            sx={{\r\n                                flexDirection: 'column',\r\n                                alignItems: message.type === 'user' ? 'flex-end' : 'flex-start',\r\n                            }}\r\n                        >\r\n                            <Box\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'flex-start',\r\n                                    gap: 1,\r\n                                    maxWidth: '80%',\r\n                                }}\r\n                            >\r\n                                {message.type === 'bot' && (\r\n                                    <Box\r\n                                        sx={{\r\n                                            width: 32,\r\n                                            height: 32,\r\n                                            borderRadius: '50%',\r\n                                            bgcolor: 'rgba(25, 118, 210, 0.9)',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            flexShrink: 0,\r\n                                            mt: 1,\r\n                                        }}\r\n                                    >\r\n                                        <span role=\"img\" aria-label=\"robot\" style={{ fontSize: '1.2rem' }}>🤖</span>\r\n                                    </Box>\r\n                                )}\r\n                                <Paper\r\n                                    elevation={1}\r\n                                    sx={{\r\n                                        p: 2,\r\n                                        bgcolor: message.type === 'user' \r\n                                            ? 'rgba(25, 118, 210, 0.9)' \r\n                                            : 'rgba(13, 71, 161, 0.9)',\r\n                                        color: '#FFFFFF',\r\n                                        borderRadius: 2,\r\n                                        border: '1px solid rgba(255, 255, 255, 0.1)',\r\n                                        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.2)',\r\n                                        position: 'relative',\r\n                                        '&::before': {\r\n                                            content: '\"\"',\r\n                                            position: 'absolute',\r\n                                            top: 0,\r\n                                            left: 0,\r\n                                            right: 0,\r\n                                            bottom: 0,\r\n                                            background: 'linear-gradient(45deg, rgba(255, 255, 255, 0.05) 0%, transparent 100%)',\r\n                                            borderRadius: 'inherit',\r\n                                            pointerEvents: 'none',\r\n                                        },\r\n                                    }}\r\n                                >\r\n                                    <Typography\r\n                                        variant=\"body1\"\r\n                                        sx={{\r\n                                            whiteSpace: 'pre-line',\r\n                                            fontFamily: 'Consolas, monospace',\r\n                                            fontSize: '0.95rem',\r\n                                            lineHeight: 1.6,\r\n                                        }}\r\n                                    >\r\n                                        {message.content}\r\n                                    </Typography>\r\n                                </Paper>\r\n                                {message.type === 'user' && (\r\n                                    <Box\r\n                                        sx={{\r\n                                            width: 32,\r\n                                            height: 32,\r\n                                            borderRadius: '50%',\r\n                                            bgcolor: 'rgba(25, 118, 210, 0.9)',\r\n                                            display: 'flex',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center',\r\n                                            flexShrink: 0,\r\n                                            mt: 1,\r\n                                        }}\r\n                                    >\r\n                                        <AccountCircleIcon sx={{ color: '#FFFFFF' }} />\r\n                                    </Box>\r\n                                )}\r\n                            </Box>\r\n                        </ListItem>\r\n                    ))}\r\n                    <div ref={messagesEndRef} />\r\n                </List>\r\n\r\n                <Divider sx={{ bgcolor: 'rgba(255, 255, 255, 0.1)' }} />\r\n\r\n                <Box\r\n                    sx={{\r\n                        p: 2,\r\n                        bgcolor: 'rgba(13, 71, 161, 0.95)',\r\n                        display: 'flex',\r\n                        gap: 1,\r\n                        borderTop: '1px solid rgba(255, 255, 255, 0.1)',\r\n                        position: 'relative',\r\n                        '&::before': {\r\n                            content: '\"\"',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            left: 0,\r\n                            right: 0,\r\n                            height: '1px',\r\n                            background: 'linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent)',\r\n                        },\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Type your message...\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        disabled={loading}\r\n                        sx={{\r\n                            '& .MuiOutlinedInput-root': {\r\n                                bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n                                color: '#FFFFFF',\r\n                                '& fieldset': {\r\n                                    borderColor: 'rgba(255, 255, 255, 0.1)',\r\n                                },\r\n                                '&:hover fieldset': {\r\n                                    borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                                },\r\n                                '&.Mui-focused fieldset': {\r\n                                    borderColor: '#64B5F6',\r\n                                },\r\n                            },\r\n                            '& .MuiInputLabel-root': {\r\n                                color: 'rgba(255, 255, 255, 0.7)',\r\n                            },\r\n                        }}\r\n                    />\r\n                    <IconButton\r\n                        onClick={toggleRecording}\r\n                        color={isRecording ? 'error' : 'primary'}\r\n                        sx={{ \r\n                            bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n                            '&:hover': {\r\n                                bgcolor: 'rgba(255, 255, 255, 0.1)',\r\n                            },\r\n                        }}\r\n                    >\r\n                        {isRecording ? <StopIcon /> : <MicIcon />}\r\n                    </IconButton>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleSend}\r\n                        disabled={loading || !input.trim()}\r\n                        endIcon={loading ? <CircularProgress size={20} /> : <SendIcon />}\r\n                        sx={{\r\n                            minWidth: '100px',\r\n                            bgcolor: 'rgba(25, 118, 210, 0.9)',\r\n                            '&:hover': {\r\n                                bgcolor: 'rgba(25, 118, 210, 1)',\r\n                            },\r\n                            '&.Mui-disabled': {\r\n                                bgcolor: 'rgba(255, 255, 255, 0.1)',\r\n                            },\r\n                        }}\r\n                    >\r\n                        {loading ? 'Sending...' : 'Send'}\r\n                    </Button>\r\n                </Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChatInterface; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SACIC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,UAAU,EACVC,UAAU,EACVC,gBAAgB,EAChBC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,OAAO,EACPC,MAAM,EACNC,OAAO,EACPC,IAAI,EACJC,QAAQ,QACL,eAAe;AACtB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMuC,cAAc,GAAGtC,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM;IAAEuC,IAAI;IAAEC;EAAO,CAAC,GAAGlB,OAAO,CAAC,CAAC;EAClC,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAMmB,cAAc,GAAG1C,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM2C,kBAAkB,GAAIC,UAAU,IAAK;IACvC;IACA,MAAMC,OAAO,GAAGD,UAAU,CAACE,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;;IAE/C;IACA,IAAIF,OAAO,CAACG,QAAQ,CAAC,aAAa,CAAC,IAAIH,OAAO,CAACG,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MACvE;MACA,MAAMC,OAAO,GAAG,wEAAwE;MACxF,MAAMC,KAAK,GAAGL,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MACpC,IAAIC,KAAK,EAAE;QACP,MAAM,CAACC,CAAC,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,KAAK;QAC/C,OAAO,gBAAgBE,IAAI,CAACL,IAAI,CAAC,CAAC,KAAKM,KAAK,KAAKC,KAAK,KAAKC,QAAQ,CAACR,IAAI,CAAC,CAAC,EAAE;MAChF;IACJ;IAEA,IAAIF,OAAO,CAACG,QAAQ,CAAC,gBAAgB,CAAC,IAAIH,OAAO,CAACG,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MAC1E,MAAMC,OAAO,GAAG,8DAA8D;MAC9E,MAAMC,KAAK,GAAGL,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MACpC,IAAIC,KAAK,EAAE;QACP,MAAM,CAACC,CAAC,EAAEC,IAAI,EAAEI,KAAK,EAAEC,KAAK,CAAC,GAAGP,KAAK;QACrC,OAAO,mBAAmBE,IAAI,CAACL,IAAI,CAAC,CAAC,KAAKS,KAAK,CAACT,IAAI,CAAC,CAAC,KAAKU,KAAK,CAACV,IAAI,CAAC,CAAC,EAAE;MAC7E;IACJ;IAEA,IAAIF,OAAO,CAACG,QAAQ,CAAC,gBAAgB,CAAC,IAAIH,OAAO,CAACG,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MAC1E,MAAMC,OAAO,GAAG,wCAAwC;MACxD,MAAMC,KAAK,GAAGL,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MACpC,IAAIC,KAAK,EAAE;QACP,OAAO,mBAAmBA,KAAK,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC,EAAE;MAC/C;IACJ;IAEA,IAAIF,OAAO,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC5B,MAAMC,OAAO,GAAG,gBAAgB;MAChC,MAAMC,KAAK,GAAGL,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MACpC,IAAIC,KAAK,EAAE;QACP,OAAO,UAAUA,KAAK,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC,EAAE;MACtC;IACJ;IAEA,IAAIF,OAAO,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC9B,MAAMC,OAAO,GAAG,kBAAkB;MAClC,MAAMC,KAAK,GAAGL,OAAO,CAACK,KAAK,CAACD,OAAO,CAAC;MACpC,IAAIC,KAAK,EAAE;QACP,OAAO,YAAYA,KAAK,CAAC,CAAC,CAAC,CAACH,IAAI,CAAC,CAAC,EAAE;MACxC;IACJ;IAEA,IAAIF,OAAO,CAACG,QAAQ,CAAC,UAAU,CAAC,IAAIH,OAAO,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;MAC9D,OAAO,mBAAmB;IAC9B;;IAEA;IACA,OAAOH,OAAO;EAClB,CAAC;EAED5C,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,yBAAyB,IAAIyD,MAAM,EAAE;MACrChB,cAAc,CAACiB,OAAO,GAAG,IAAID,MAAM,CAACE,uBAAuB,CAAC,CAAC;MAC7DlB,cAAc,CAACiB,OAAO,CAACE,UAAU,GAAG,IAAI;MACxCnB,cAAc,CAACiB,OAAO,CAACG,cAAc,GAAG,IAAI;MAE5CpB,cAAc,CAACiB,OAAO,CAACI,QAAQ,GAAIC,KAAK,IAAK;QACzC,MAAMpB,UAAU,GAAGqB,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC,CACvCC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,CAAC,CACxBD,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACzB,UAAU,CAAC,CAChC0B,IAAI,CAAC,EAAE,CAAC;QAEb,MAAMC,gBAAgB,GAAG5B,kBAAkB,CAACC,UAAU,CAAC;QACvDb,QAAQ,CAACwC,gBAAgB,CAAC;MAC9B,CAAC;MAED7B,cAAc,CAACiB,OAAO,CAACa,OAAO,GAAIR,KAAK,IAAK;QACxCS,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEV,KAAK,CAACU,KAAK,CAAC;QACvDvC,cAAc,CAAC,KAAK,CAAC;MACzB,CAAC;MAEDO,cAAc,CAACiB,OAAO,CAACgB,KAAK,GAAG,MAAM;QACjCxC,cAAc,CAAC,KAAK,CAAC;QACrB,IAAIL,KAAK,CAACiB,IAAI,CAAC,CAAC,EAAE;UACd6B,UAAU,CAAC,CAAC;QAChB;MACJ,CAAC;IACL;;IAEA;IACA,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;UACnEC,WAAW,EAAE;QACjB,CAAC,CAAC;QACF,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACb,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UAClC,IAAID,IAAI,CAACE,OAAO,IAAIF,IAAI,CAACE,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;YACzCxD,WAAW,CAACqD,IAAI,CAACE,OAAO,CAAC;UAC7B,CAAC,MAAM;YACH;YACAvD,WAAW,CAAC,CAAC;cACTyD,IAAI,EAAE,KAAK;cACXC,OAAO,EAAE,cAAchD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiD,QAAQ,4BAA4B,GAC7D,gFAAgF,GAChF,0BAA0B,GAC1B,0DAA0D,GAC1D,qDAAqD,GACrD,iCAAiC,GACjC,qBAAqB,GACrB,8BAA8B,GAC9B,4BAA4B,GAC5B,4BAA4B,GAC5B,sBAAsB,GACtB,qDAAqD,GACrD,mCAAmC,GACnC,wCAAwC,GACxC,YAAY,GACZ,qCAAqC,GACrC,iCAAiC,GACjC,sCAAsC,GACtC,4CAA4C,GAC5C;YACR,CAAC,CAAC,CAAC;UACP;QACJ;MACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDG,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACtC,IAAI,CAAC,CAAC;;EAEV;EACAtC,SAAS,CAAC,MAAM;IACZ,MAAMwF,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI7D,QAAQ,CAACyD,MAAM,GAAG,CAAC,EAAE;QACrB,IAAI;UACA,MAAMN,KAAK,CAAC,wCAAwC,EAAE;YAClDW,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAElE;YAAS,CAAC,CAAC;YAClCoD,WAAW,EAAE;UACjB,CAAC,CAAC;QACN,CAAC,CAAC,OAAON,KAAK,EAAE;UACZD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QACtD;MACJ;IACJ,CAAC;IAEDe,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAAC7D,QAAQ,CAAC,CAAC;EAEd,MAAMmE,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IACzB,CAAAA,qBAAA,GAAA1D,cAAc,CAACqB,OAAO,cAAAqC,qBAAA,uBAAtBA,qBAAA,CAAwBC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAClE,CAAC;EAEDjG,SAAS,CAAC,MAAM;IACZ8F,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACnE,QAAQ,CAAC,CAAC;EAEd,MAAMuE,eAAe,GAAInC,KAAK,IAAK;IAC/B3B,WAAW,CAAC2B,KAAK,CAACoC,aAAa,CAAC;EACpC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BhE,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMiE,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAM9D,MAAM,CAAC,CAAC;MACdC,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IAC1C;EACJ,CAAC;EAED,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAAC9C,KAAK,CAACiB,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMwD,WAAW,GAAGzE,KAAK,CAACiB,IAAI,CAAC,CAAC;IAChChB,QAAQ,CAAC,EAAE,CAAC;IACZF,WAAW,CAAC2E,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAElB,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEgB;IAAY,CAAC,CAAC,CAAC;IACtEtE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA,MAAM6C,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEW,OAAO,EAAEF;QAAY,CAAC,CAAC;QAC9CvB,WAAW,EAAE;MACjB,CAAC,CAAC;MAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QACd,MAAM,IAAIyB,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MAEA,MAAMxB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCtD,WAAW,CAAC2E,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAElB,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAEL,IAAI,CAACJ;MAAS,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZ7C,WAAW,CAAC2E,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC1BlB,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP,CAAC,SAAS;MACNtD,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAM0E,eAAe,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACjE,cAAc,CAACiB,OAAO,EAAE;MACzBiD,KAAK,CAAC,sDAAsD,CAAC;MAC7D;IACJ;IAEA,IAAI1E,WAAW,EAAE;MACbQ,cAAc,CAACiB,OAAO,CAACkD,IAAI,CAAC,CAAC;MAC7B1E,cAAc,CAAC,KAAK,CAAC;IACzB,CAAC,MAAM;MACHJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdW,cAAc,CAACiB,OAAO,CAACmD,KAAK,CAAC,CAAC;MAC9B3E,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ,CAAC;EAED,MAAM4E,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MAClCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBvC,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC;EAED,oBACInD,OAAA,CAACvB,GAAG;IACAkH,EAAE,EAAE;MACAC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,OAAO,EAAE,SAAS;MAClBC,UAAU,EAAE;IAChB,CAAE;IAAAC,QAAA,gBAEFjG,OAAA,CAACZ,MAAM;MACH8G,QAAQ,EAAC,QAAQ;MACjBP,EAAE,EAAE;QACAI,OAAO,EAAE,yBAAyB;QAClCI,cAAc,EAAE,YAAY;QAC5BC,SAAS,EAAE,+BAA+B;QAC1CC,YAAY,EAAE;MAClB,CAAE;MAAAJ,QAAA,eAEFjG,OAAA,CAACX,OAAO;QAAA4G,QAAA,gBACJjG,OAAA,CAACvB,GAAG;UAACkH,EAAE,EAAE;YAAEE,OAAO,EAAE,MAAM;YAAES,UAAU,EAAE,QAAQ;YAAEC,QAAQ,EAAE;UAAE,CAAE;UAAAN,QAAA,eAC5DjG,OAAA,CAACnB,UAAU;YACP2H,OAAO,EAAC,IAAI;YACZC,SAAS,EAAC,KAAK;YACfd,EAAE,EAAE;cACAe,UAAU,EAAE,GAAG;cACfV,UAAU,EAAE,kDAAkD;cAC9DW,oBAAoB,EAAE,MAAM;cAC5BC,mBAAmB,EAAE,aAAa;cAClCf,OAAO,EAAE,MAAM;cACfS,UAAU,EAAE,QAAQ;cACpBO,GAAG,EAAE;YACT,CAAE;YAAAZ,QAAA,gBAEFjG,OAAA;cAAM8G,IAAI,EAAC,KAAK;cAAC,cAAW,OAAO;cAACC,KAAK,EAAE;gBAAEC,QAAQ,EAAE;cAAS,CAAE;cAAAf,QAAA,EAAC;YAAE;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,iBAEhF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACNpH,OAAA,CAAClB,UAAU;UACPuI,KAAK,EAAC,SAAS;UACfC,OAAO,EAAE5C,eAAgB;UACzBiB,EAAE,EAAE;YACA4B,EAAE,EAAE,CAAC;YACL,SAAS,EAAE;cACPxB,OAAO,EAAE;YACb;UACJ,CAAE;UAAAE,QAAA,eAEFjG,OAAA,CAACJ,iBAAiB;YAAAqH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACbpH,OAAA,CAACV,IAAI;UACDqB,QAAQ,EAAEA,QAAS;UACnB6G,IAAI,EAAEC,OAAO,CAAC9G,QAAQ,CAAE;UACxB+G,OAAO,EAAE9C,eAAgB;UACzBe,EAAE,EAAE;YACA,kBAAkB,EAAE;cAChBI,OAAO,EAAE,yBAAyB;cAClCI,cAAc,EAAE,YAAY;cAC5BwB,MAAM,EAAE,oCAAoC;cAC5CC,QAAQ,EAAE;YACd;UACJ,CAAE;UAAA3B,QAAA,gBAEFjG,OAAA,CAACT,QAAQ;YAAC+H,OAAO,EAAE1C,eAAgB;YAACiD,QAAQ;YAAClC,EAAE,EAAE;cAAE0B,KAAK,EAAE;YAAU,CAAE;YAAApB,QAAA,gBAClEjG,OAAA,CAACJ,iBAAiB;cAAC+F,EAAE,EAAE;gBAAEmC,EAAE,EAAE;cAAE;YAAE;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACnCtG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEiD,QAAQ;UAAA;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACXpH,OAAA,CAACb,OAAO;YAACwG,EAAE,EAAE;cAAEoC,EAAE,EAAE,CAAC;cAAEhC,OAAO,EAAE;YAA2B;UAAE;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/DpH,OAAA,CAACT,QAAQ;YACL+H,OAAO,EAAEzC,YAAa;YACtBc,EAAE,EAAE;cACA0B,KAAK,EAAE,SAAS;cAChB,SAAS,EAAE;gBACPtB,OAAO,EAAE;cACb;YACJ,CAAE;YAAAE,QAAA,gBAEFjG,OAAA,CAACL,UAAU;cAACgG,EAAE,EAAE;gBAAEmC,EAAE,EAAE;cAAE;YAAE;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,UAEjC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAETpH,OAAA,CAACpB,KAAK;MACFoJ,SAAS,EAAE,CAAE;MACbrC,EAAE,EAAE;QACAsC,IAAI,EAAE,CAAC;QACPpC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBoC,QAAQ,EAAE,QAAQ;QAClBnC,OAAO,EAAE,yBAAyB;QAClCI,cAAc,EAAE,YAAY;QAC5BgC,YAAY,EAAE,CAAC;QACfjC,QAAQ,EAAE,UAAU;QACpB,WAAW,EAAE;UACTpC,OAAO,EAAE,IAAI;UACboC,QAAQ,EAAE,UAAU;UACpBkC,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTvC,UAAU,EAAE,mFAAmF;UAC/FwC,aAAa,EAAE;QACnB;MACJ,CAAE;MAAAvC,QAAA,gBAEFjG,OAAA,CAAChB,IAAI;QACD2G,EAAE,EAAE;UACAsC,IAAI,EAAE,CAAC;UACPC,QAAQ,EAAE,MAAM;UAChBO,CAAC,EAAE,CAAC;UACJ,OAAO,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAC;UAClB,sBAAsB,EAAE;YACpBC,KAAK,EAAE;UACX,CAAC;UACD,4BAA4B,EAAE;YAC1B3C,UAAU,EAAE;UAChB,CAAC;UACD,4BAA4B,EAAE;YAC1BA,UAAU,EAAE,0BAA0B;YACtCmC,YAAY,EAAE;UAClB,CAAC;UACD,kCAAkC,EAAE;YAChCnC,UAAU,EAAE;UAChB;QACJ,CAAE;QAAAC,QAAA,GAED9F,QAAQ,CAACwC,GAAG,CAAC,CAACqC,OAAO,EAAE4D,KAAK,kBACzB5I,OAAA,CAACf,QAAQ;UAEL0G,EAAE,EAAE;YACAG,aAAa,EAAE,QAAQ;YACvBQ,UAAU,EAAEtB,OAAO,CAACnB,IAAI,KAAK,MAAM,GAAG,UAAU,GAAG;UACvD,CAAE;UAAAoC,QAAA,eAEFjG,OAAA,CAACvB,GAAG;YACAkH,EAAE,EAAE;cACAE,OAAO,EAAE,MAAM;cACfS,UAAU,EAAE,YAAY;cACxBO,GAAG,EAAE,CAAC;cACNgC,QAAQ,EAAE;YACd,CAAE;YAAA5C,QAAA,GAEDjB,OAAO,CAACnB,IAAI,KAAK,KAAK,iBACnB7D,OAAA,CAACvB,GAAG;cACAkH,EAAE,EAAE;gBACAgD,KAAK,EAAE,EAAE;gBACT/C,MAAM,EAAE,EAAE;gBACVuC,YAAY,EAAE,KAAK;gBACnBpC,OAAO,EAAE,yBAAyB;gBAClCF,OAAO,EAAE,MAAM;gBACfS,UAAU,EAAE,QAAQ;gBACpBwC,cAAc,EAAE,QAAQ;gBACxBC,UAAU,EAAE,CAAC;gBACbC,EAAE,EAAE;cACR,CAAE;cAAA/C,QAAA,eAEFjG,OAAA;gBAAM8G,IAAI,EAAC,KAAK;gBAAC,cAAW,OAAO;gBAACC,KAAK,EAAE;kBAAEC,QAAQ,EAAE;gBAAS,CAAE;gBAAAf,QAAA,EAAC;cAAE;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E,CACR,eACDpH,OAAA,CAACpB,KAAK;cACFoJ,SAAS,EAAE,CAAE;cACbrC,EAAE,EAAE;gBACA8C,CAAC,EAAE,CAAC;gBACJ1C,OAAO,EAAEf,OAAO,CAACnB,IAAI,KAAK,MAAM,GAC1B,yBAAyB,GACzB,wBAAwB;gBAC9BwD,KAAK,EAAE,SAAS;gBAChBc,YAAY,EAAE,CAAC;gBACfR,MAAM,EAAE,oCAAoC;gBAC5CvB,SAAS,EAAE,8BAA8B;gBACzCF,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE;kBACTpC,OAAO,EAAE,IAAI;kBACboC,QAAQ,EAAE,UAAU;kBACpBkC,GAAG,EAAE,CAAC;kBACNC,IAAI,EAAE,CAAC;kBACPC,KAAK,EAAE,CAAC;kBACRC,MAAM,EAAE,CAAC;kBACTvC,UAAU,EAAE,wEAAwE;kBACpFmC,YAAY,EAAE,SAAS;kBACvBK,aAAa,EAAE;gBACnB;cACJ,CAAE;cAAAvC,QAAA,eAEFjG,OAAA,CAACnB,UAAU;gBACP2H,OAAO,EAAC,OAAO;gBACfb,EAAE,EAAE;kBACAsD,UAAU,EAAE,UAAU;kBACtBC,UAAU,EAAE,qBAAqB;kBACjClC,QAAQ,EAAE,SAAS;kBACnBmC,UAAU,EAAE;gBAChB,CAAE;gBAAAlD,QAAA,EAEDjB,OAAO,CAAClB;cAAO;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,EACPpC,OAAO,CAACnB,IAAI,KAAK,MAAM,iBACpB7D,OAAA,CAACvB,GAAG;cACAkH,EAAE,EAAE;gBACAgD,KAAK,EAAE,EAAE;gBACT/C,MAAM,EAAE,EAAE;gBACVuC,YAAY,EAAE,KAAK;gBACnBpC,OAAO,EAAE,yBAAyB;gBAClCF,OAAO,EAAE,MAAM;gBACfS,UAAU,EAAE,QAAQ;gBACpBwC,cAAc,EAAE,QAAQ;gBACxBC,UAAU,EAAE,CAAC;gBACbC,EAAE,EAAE;cACR,CAAE;cAAA/C,QAAA,eAEFjG,OAAA,CAACJ,iBAAiB;gBAAC+F,EAAE,EAAE;kBAAE0B,KAAK,EAAE;gBAAU;cAAE;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC,GArFDwB,KAAK;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAsFJ,CACb,CAAC,eACFpH,OAAA;UAAKoJ,GAAG,EAAEvI;QAAe;UAAAoG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eAEPpH,OAAA,CAACb,OAAO;QAACwG,EAAE,EAAE;UAAEI,OAAO,EAAE;QAA2B;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAExDpH,OAAA,CAACvB,GAAG;QACAkH,EAAE,EAAE;UACA8C,CAAC,EAAE,CAAC;UACJ1C,OAAO,EAAE,yBAAyB;UAClCF,OAAO,EAAE,MAAM;UACfgB,GAAG,EAAE,CAAC;UACNwC,SAAS,EAAE,oCAAoC;UAC/CnD,QAAQ,EAAE,UAAU;UACpB,WAAW,EAAE;YACTpC,OAAO,EAAE,IAAI;YACboC,QAAQ,EAAE,UAAU;YACpBkC,GAAG,EAAE,CAAC;YACNC,IAAI,EAAE,CAAC;YACPC,KAAK,EAAE,CAAC;YACR1C,MAAM,EAAE,KAAK;YACbI,UAAU,EAAE;UAChB;QACJ,CAAE;QAAAC,QAAA,gBAEFjG,OAAA,CAACtB,SAAS;UACN4K,SAAS;UACT9C,OAAO,EAAC,UAAU;UAClB+C,WAAW,EAAC,sBAAsB;UAClCvH,KAAK,EAAE3B,KAAM;UACbmJ,QAAQ,EAAGjE,CAAC,IAAKjF,QAAQ,CAACiF,CAAC,CAACkE,MAAM,CAACzH,KAAK,CAAE;UAC1C0H,UAAU,EAAEpE,cAAe;UAC3BuC,QAAQ,EAAEtH,OAAQ;UAClBoF,EAAE,EAAE;YACA,0BAA0B,EAAE;cACxBI,OAAO,EAAE,2BAA2B;cACpCsB,KAAK,EAAE,SAAS;cAChB,YAAY,EAAE;gBACVsC,WAAW,EAAE;cACjB,CAAC;cACD,kBAAkB,EAAE;gBAChBA,WAAW,EAAE;cACjB,CAAC;cACD,wBAAwB,EAAE;gBACtBA,WAAW,EAAE;cACjB;YACJ,CAAC;YACD,uBAAuB,EAAE;cACrBtC,KAAK,EAAE;YACX;UACJ;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACFpH,OAAA,CAAClB,UAAU;UACPwI,OAAO,EAAEpC,eAAgB;UACzBmC,KAAK,EAAE5G,WAAW,GAAG,OAAO,GAAG,SAAU;UACzCkF,EAAE,EAAE;YACAI,OAAO,EAAE,2BAA2B;YACpC,SAAS,EAAE;cACPA,OAAO,EAAE;YACb;UACJ,CAAE;UAAAE,QAAA,EAEDxF,WAAW,gBAAGT,OAAA,CAACN,QAAQ;YAAAuH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGpH,OAAA,CAACP,OAAO;YAAAwH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACbpH,OAAA,CAACrB,MAAM;UACH6H,OAAO,EAAC,WAAW;UACnBc,OAAO,EAAEnE,UAAW;UACpB0E,QAAQ,EAAEtH,OAAO,IAAI,CAACF,KAAK,CAACiB,IAAI,CAAC,CAAE;UACnCsI,OAAO,EAAErJ,OAAO,gBAAGP,OAAA,CAACjB,gBAAgB;YAAC8K,IAAI,EAAE;UAAG;YAAA5C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGpH,OAAA,CAACR,QAAQ;YAAAyH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACjEzB,EAAE,EAAE;YACAiC,QAAQ,EAAE,OAAO;YACjB7B,OAAO,EAAE,yBAAyB;YAClC,SAAS,EAAE;cACPA,OAAO,EAAE;YACb,CAAC;YACD,gBAAgB,EAAE;cACdA,OAAO,EAAE;YACb;UACJ,CAAE;UAAAE,QAAA,EAED1F,OAAO,GAAG,YAAY,GAAG;QAAM;UAAA0G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAClH,EAAA,CAriBID,aAAa;EAAA,QAOUJ,OAAO,EACfC,WAAW;AAAA;AAAAgK,EAAA,GAR1B7J,aAAa;AAuiBnB,eAAeA,aAAa;AAAC,IAAA6J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}