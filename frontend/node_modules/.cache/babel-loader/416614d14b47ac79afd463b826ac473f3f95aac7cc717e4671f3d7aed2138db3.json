{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport const useSpeech = () => {\n  _s();\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [speechSynthesis, setSpeechSynthesis] = useState(null);\n  const [currentUtterance, setCurrentUtterance] = useState(null);\n  const speak = useCallback(text => {\n    if (!window.speechSynthesis) {\n      console.warn('Speech synthesis not supported');\n      return;\n    }\n\n    // Cancel any ongoing speech\n    if (speechSynthesis) {\n      speechSynthesis.cancel();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.rate = 1.0;\n    utterance.pitch = 1.0;\n    utterance.volume = 1.0;\n\n    // Try to find a good voice\n    const voices = window.speechSynthesis.getVoices();\n    const preferredVoice = voices.find(voice => voice.name === 'Google UK English Female') || voices.find(voice => voice.name.includes('Female')) || voices[0];\n    if (preferredVoice) {\n      utterance.voice = preferredVoice;\n    }\n    utterance.onstart = () => {\n      setIsSpeaking(true);\n      setSpeechSynthesis(window.speechSynthesis);\n      setCurrentUtterance(utterance);\n    };\n    utterance.onend = () => {\n      setIsSpeaking(false);\n      setSpeechSynthesis(null);\n      setCurrentUtterance(null);\n    };\n    utterance.onerror = event => {\n      console.error('Speech synthesis error:', event);\n      setIsSpeaking(false);\n      setSpeechSynthesis(null);\n      setCurrentUtterance(null);\n    };\n    window.speechSynthesis.speak(utterance);\n  }, [speechSynthesis]);\n  const cancel = useCallback(() => {\n    if (speechSynthesis) {\n      speechSynthesis.cancel();\n      setIsSpeaking(false);\n      setSpeechSynthesis(null);\n      setCurrentUtterance(null);\n    }\n  }, [speechSynthesis]);\n  return {\n    speak,\n    cancel,\n    isSpeaking\n  };\n};\n_s(useSpeech, \"0DXp6RuwTs3HqEf6owEfTt08Rak=\");","map":{"version":3,"names":["useState","useCallback","useSpeech","_s","isSpeaking","setIsSpeaking","speechSynthesis","setSpeechSynthesis","currentUtterance","setCurrentUtterance","speak","text","window","console","warn","cancel","utterance","SpeechSynthesisUtterance","rate","pitch","volume","voices","getVoices","preferredVoice","find","voice","name","includes","onstart","onend","onerror","event","error"],"sources":["C:/Users/singh/Dropbox/CODING/EcommerceChatbot/frontend/src/hooks/useSpeech.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nexport const useSpeech = () => {\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [speechSynthesis, setSpeechSynthesis] = useState(null);\r\n  const [currentUtterance, setCurrentUtterance] = useState(null);\r\n\r\n  const speak = useCallback((text) => {\r\n    if (!window.speechSynthesis) {\r\n      console.warn('Speech synthesis not supported');\r\n      return;\r\n    }\r\n\r\n    // Cancel any ongoing speech\r\n    if (speechSynthesis) {\r\n      speechSynthesis.cancel();\r\n    }\r\n\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.rate = 1.0;\r\n    utterance.pitch = 1.0;\r\n    utterance.volume = 1.0;\r\n\r\n    // Try to find a good voice\r\n    const voices = window.speechSynthesis.getVoices();\r\n    const preferredVoice = voices.find(\r\n      (voice) => voice.name === 'Google UK English Female'\r\n    ) || voices.find(\r\n      (voice) => voice.name.includes('Female')\r\n    ) || voices[0];\r\n\r\n    if (preferredVoice) {\r\n      utterance.voice = preferredVoice;\r\n    }\r\n\r\n    utterance.onstart = () => {\r\n      setIsSpeaking(true);\r\n      setSpeechSynthesis(window.speechSynthesis);\r\n      setCurrentUtterance(utterance);\r\n    };\r\n\r\n    utterance.onend = () => {\r\n      setIsSpeaking(false);\r\n      setSpeechSynthesis(null);\r\n      setCurrentUtterance(null);\r\n    };\r\n\r\n    utterance.onerror = (event) => {\r\n      console.error('Speech synthesis error:', event);\r\n      setIsSpeaking(false);\r\n      setSpeechSynthesis(null);\r\n      setCurrentUtterance(null);\r\n    };\r\n\r\n    window.speechSynthesis.speak(utterance);\r\n  }, [speechSynthesis]);\r\n\r\n  const cancel = useCallback(() => {\r\n    if (speechSynthesis) {\r\n      speechSynthesis.cancel();\r\n      setIsSpeaking(false);\r\n      setSpeechSynthesis(null);\r\n      setCurrentUtterance(null);\r\n    }\r\n  }, [speechSynthesis]);\r\n\r\n  return {\r\n    speak,\r\n    cancel,\r\n    isSpeaking,\r\n  };\r\n}; "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACM,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMU,KAAK,GAAGT,WAAW,CAAEU,IAAI,IAAK;IAClC,IAAI,CAACC,MAAM,CAACN,eAAe,EAAE;MAC3BO,OAAO,CAACC,IAAI,CAAC,gCAAgC,CAAC;MAC9C;IACF;;IAEA;IACA,IAAIR,eAAe,EAAE;MACnBA,eAAe,CAACS,MAAM,CAAC,CAAC;IAC1B;IAEA,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACN,IAAI,CAAC;IACpDK,SAAS,CAACE,IAAI,GAAG,GAAG;IACpBF,SAAS,CAACG,KAAK,GAAG,GAAG;IACrBH,SAAS,CAACI,MAAM,GAAG,GAAG;;IAEtB;IACA,MAAMC,MAAM,GAAGT,MAAM,CAACN,eAAe,CAACgB,SAAS,CAAC,CAAC;IACjD,MAAMC,cAAc,GAAGF,MAAM,CAACG,IAAI,CAC/BC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAK,0BAC5B,CAAC,IAAIL,MAAM,CAACG,IAAI,CACbC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,QAAQ,CACzC,CAAC,IAAIN,MAAM,CAAC,CAAC,CAAC;IAEd,IAAIE,cAAc,EAAE;MAClBP,SAAS,CAACS,KAAK,GAAGF,cAAc;IAClC;IAEAP,SAAS,CAACY,OAAO,GAAG,MAAM;MACxBvB,aAAa,CAAC,IAAI,CAAC;MACnBE,kBAAkB,CAACK,MAAM,CAACN,eAAe,CAAC;MAC1CG,mBAAmB,CAACO,SAAS,CAAC;IAChC,CAAC;IAEDA,SAAS,CAACa,KAAK,GAAG,MAAM;MACtBxB,aAAa,CAAC,KAAK,CAAC;MACpBE,kBAAkB,CAAC,IAAI,CAAC;MACxBE,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC;IAEDO,SAAS,CAACc,OAAO,GAAIC,KAAK,IAAK;MAC7BlB,OAAO,CAACmB,KAAK,CAAC,yBAAyB,EAAED,KAAK,CAAC;MAC/C1B,aAAa,CAAC,KAAK,CAAC;MACpBE,kBAAkB,CAAC,IAAI,CAAC;MACxBE,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC;IAEDG,MAAM,CAACN,eAAe,CAACI,KAAK,CAACM,SAAS,CAAC;EACzC,CAAC,EAAE,CAACV,eAAe,CAAC,CAAC;EAErB,MAAMS,MAAM,GAAGd,WAAW,CAAC,MAAM;IAC/B,IAAIK,eAAe,EAAE;MACnBA,eAAe,CAACS,MAAM,CAAC,CAAC;MACxBV,aAAa,CAAC,KAAK,CAAC;MACpBE,kBAAkB,CAAC,IAAI,CAAC;MACxBE,mBAAmB,CAAC,IAAI,CAAC;IAC3B;EACF,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,OAAO;IACLI,KAAK;IACLK,MAAM;IACNX;EACF,CAAC;AACH,CAAC;AAACD,EAAA,CArEWD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}