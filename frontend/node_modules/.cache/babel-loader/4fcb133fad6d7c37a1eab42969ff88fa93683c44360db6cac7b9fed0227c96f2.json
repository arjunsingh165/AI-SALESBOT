{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Dropbox\\\\CODING\\\\EcommerceChatbot\\\\frontend\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, TextField, Button, Paper, Typography, IconButton, CircularProgress, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const messagesEndRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      recognitionRef.current = new window.webkitSpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n        setInput(transcript);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsRecording(false);\n      };\n    }\n\n    // Add welcome message\n    setMessages([{\n      type: 'bot',\n      content: `Welcome ${user === null || user === void 0 ? void 0 : user.username}! I can help you with:\\n\\n` + '1. Adding products:\\n' + '   \"Add product: [name], [price], [stock], [category]\"\\n\\n' + '2. Updating products:\\n' + '   \"Update product: [name], [field], [new value]\"\\n\\n' + '3. Deleting products:\\n' + '   \"Delete product: [name]\"\\n\\n' + '4. Searching products:\\n' + '   \"Search [product name]\" or \"Category [category]\"\\n\\n' + '5. Viewing all products:\\n' + '   \"Show all products\"\\n\\n' + 'You can also use voice input by clicking the microphone icon!'\n    }]);\n  }, [user]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: userMessage\n    }]);\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage\n        }),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: data.response\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleRecording = () => {\n    if (!recognitionRef.current) {\n      alert('Speech recognition is not supported in your browser.');\n      return;\n    }\n    if (isRecording) {\n      recognitionRef.current.stop();\n      setIsRecording(false);\n    } else {\n      recognitionRef.current.start();\n      setIsRecording(true);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      bgcolor: 'background.default',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        bgcolor: 'rgba(30, 30, 30, 0.9)',\n        backdropFilter: 'blur(10px)',\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderBottom: 1,\n          borderColor: 'divider',\n          bgcolor: 'primary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: 'white'\n          },\n          children: \"Sales Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          flex: 1,\n          overflow: 'auto',\n          p: 2,\n          '& > *': {\n            mb: 2\n          }\n        },\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            flexDirection: 'column',\n            alignItems: message.type === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              p: 2,\n              maxWidth: '80%',\n              bgcolor: message.type === 'user' ? 'primary.main' : 'background.paper',\n              color: message.type === 'user' ? 'white' : 'text.primary',\n              borderRadius: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                whiteSpace: 'pre-line',\n                fontFamily: 'monospace'\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: 'background.paper',\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          disabled: loading,\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              bgcolor: 'background.paper'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: toggleRecording,\n          color: isRecording ? 'error' : 'primary',\n          sx: {\n            bgcolor: 'background.paper'\n          },\n          children: isRecording ? /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSend,\n          disabled: loading || !input.trim(),\n          endIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 77\n          }, this),\n          sx: {\n            minWidth: '100px',\n            background: 'linear-gradient(45deg, #64B5F6 30%, #FF4081 90%)',\n            '&:hover': {\n              background: 'linear-gradient(45deg, #42A5F5 30%, #F50057 90%)'\n            }\n          },\n          children: loading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"IGJ5mlnKjRoZ+yi77fRGBkF2cT4=\", false, function () {\n  return [useAuth];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","TextField","Button","Paper","Typography","IconButton","CircularProgress","List","ListItem","ListItemText","Divider","SendIcon","MicIcon","StopIcon","useAuth","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","input","setInput","loading","setLoading","isRecording","setIsRecording","messagesEndRef","user","recognitionRef","window","current","webkitSpeechRecognition","continuous","interimResults","onresult","event","transcript","Array","from","results","map","result","join","onerror","console","error","type","content","username","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","handleSend","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","credentials","ok","Error","data","json","toggleRecording","alert","stop","start","handleKeyPress","e","key","shiftKey","preventDefault","sx","height","display","flexDirection","bgcolor","p","children","elevation","flex","overflow","backdropFilter","borderRadius","borderBottom","borderColor","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","mb","index","alignItems","maxWidth","whiteSpace","fontFamily","ref","gap","fullWidth","placeholder","value","onChange","target","onKeyPress","disabled","onClick","endIcon","size","minWidth","background","_c","$RefreshReg$"],"sources":["C:/Users/singh/Dropbox/CODING/EcommerceChatbot/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    IconButton,\r\n    CircularProgress,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport StopIcon from '@mui/icons-material/Stop';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ChatInterface = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n    const { user } = useAuth();\r\n    const recognitionRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Initialize speech recognition\r\n        if ('webkitSpeechRecognition' in window) {\r\n            recognitionRef.current = new window.webkitSpeechRecognition();\r\n            recognitionRef.current.continuous = true;\r\n            recognitionRef.current.interimResults = true;\r\n\r\n            recognitionRef.current.onresult = (event) => {\r\n                const transcript = Array.from(event.results)\r\n                    .map(result => result[0])\r\n                    .map(result => result.transcript)\r\n                    .join('');\r\n                setInput(transcript);\r\n            };\r\n\r\n            recognitionRef.current.onerror = (event) => {\r\n                console.error('Speech recognition error:', event.error);\r\n                setIsRecording(false);\r\n            };\r\n        }\r\n\r\n        // Add welcome message\r\n        setMessages([\r\n            {\r\n                type: 'bot',\r\n                content: `Welcome ${user?.username}! I can help you with:\\n\\n` +\r\n                    '1. Adding products:\\n' +\r\n                    '   \"Add product: [name], [price], [stock], [category]\"\\n\\n' +\r\n                    '2. Updating products:\\n' +\r\n                    '   \"Update product: [name], [field], [new value]\"\\n\\n' +\r\n                    '3. Deleting products:\\n' +\r\n                    '   \"Delete product: [name]\"\\n\\n' +\r\n                    '4. Searching products:\\n' +\r\n                    '   \"Search [product name]\" or \"Category [category]\"\\n\\n' +\r\n                    '5. Viewing all products:\\n' +\r\n                    '   \"Show all products\"\\n\\n' +\r\n                    'You can also use voice input by clicking the microphone icon!'\r\n            }\r\n        ]);\r\n    }, [user]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const handleSend = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = input.trim();\r\n        setInput('');\r\n        setMessages(prev => [...prev, { type: 'user', content: userMessage }]);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ message: userMessage }),\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to get response');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setMessages(prev => [...prev, { type: 'bot', content: data.response }]);\r\n        } catch (error) {\r\n            setMessages(prev => [...prev, {\r\n                type: 'bot',\r\n                content: 'Sorry, I encountered an error. Please try again.'\r\n            }]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const toggleRecording = () => {\r\n        if (!recognitionRef.current) {\r\n            alert('Speech recognition is not supported in your browser.');\r\n            return;\r\n        }\r\n\r\n        if (isRecording) {\r\n            recognitionRef.current.stop();\r\n            setIsRecording(false);\r\n        } else {\r\n            recognitionRef.current.start();\r\n            setIsRecording(true);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSend();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                bgcolor: 'background.default',\r\n                p: 2,\r\n            }}\r\n        >\r\n            <Paper\r\n                elevation={3}\r\n                sx={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'rgba(30, 30, 30, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    borderRadius: 2,\r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        p: 2,\r\n                        borderBottom: 1,\r\n                        borderColor: 'divider',\r\n                        bgcolor: 'primary.main',\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n                        Sales Chatbot\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <List\r\n                    sx={{\r\n                        flex: 1,\r\n                        overflow: 'auto',\r\n                        p: 2,\r\n                        '& > *': { mb: 2 },\r\n                    }}\r\n                >\r\n                    {messages.map((message, index) => (\r\n                        <ListItem\r\n                            key={index}\r\n                            sx={{\r\n                                flexDirection: 'column',\r\n                                alignItems: message.type === 'user' ? 'flex-end' : 'flex-start',\r\n                            }}\r\n                        >\r\n                            <Paper\r\n                                elevation={1}\r\n                                sx={{\r\n                                    p: 2,\r\n                                    maxWidth: '80%',\r\n                                    bgcolor: message.type === 'user' ? 'primary.main' : 'background.paper',\r\n                                    color: message.type === 'user' ? 'white' : 'text.primary',\r\n                                    borderRadius: 2,\r\n                                }}\r\n                            >\r\n                                <Typography\r\n                                    variant=\"body1\"\r\n                                    sx={{\r\n                                        whiteSpace: 'pre-line',\r\n                                        fontFamily: 'monospace',\r\n                                    }}\r\n                                >\r\n                                    {message.content}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </ListItem>\r\n                    ))}\r\n                    <div ref={messagesEndRef} />\r\n                </List>\r\n\r\n                <Divider />\r\n\r\n                <Box\r\n                    sx={{\r\n                        p: 2,\r\n                        bgcolor: 'background.paper',\r\n                        display: 'flex',\r\n                        gap: 1,\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Type your message...\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        disabled={loading}\r\n                        sx={{\r\n                            '& .MuiOutlinedInput-root': {\r\n                                bgcolor: 'background.paper',\r\n                            },\r\n                        }}\r\n                    />\r\n                    <IconButton\r\n                        onClick={toggleRecording}\r\n                        color={isRecording ? 'error' : 'primary'}\r\n                        sx={{ bgcolor: 'background.paper' }}\r\n                    >\r\n                        {isRecording ? <StopIcon /> : <MicIcon />}\r\n                    </IconButton>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleSend}\r\n                        disabled={loading || !input.trim()}\r\n                        endIcon={loading ? <CircularProgress size={20} /> : <SendIcon />}\r\n                        sx={{\r\n                            minWidth: '100px',\r\n                            background: 'linear-gradient(45deg, #64B5F6 30%, #FF4081 90%)',\r\n                            '&:hover': {\r\n                                background: 'linear-gradient(45deg, #42A5F5 30%, #F50057 90%)',\r\n                            },\r\n                        }}\r\n                    >\r\n                        {loading ? 'Sending...' : 'Send'}\r\n                    </Button>\r\n                </Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}