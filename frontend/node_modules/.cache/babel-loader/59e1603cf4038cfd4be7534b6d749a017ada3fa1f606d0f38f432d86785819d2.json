{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Dropbox\\\\CODING\\\\EcommerceChatbot\\\\frontend\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, TextField, Button, Paper, Typography, IconButton, CircularProgress, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const messagesEndRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n  const recognitionRef = useRef(null);\n  const formatVoiceCommand = transcript => {\n    // Convert transcript to lowercase for easier matching\n    const command = transcript.toLowerCase().trim();\n\n    // Handle different command patterns\n    if (command.includes('add product') || command.includes('create product')) {\n      // Extract product details using regex\n      const pattern = /(?:add|create) product:?\\s*([^,]+),\\s*(\\d+\\.?\\d*),\\s*(\\d+),\\s*([^,]+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        const [_, name, price, stock, category] = match;\n        return `Add product: ${name.trim()}, ${price}, ${stock}, ${category.trim()}`;\n      }\n    }\n    if (command.includes('update product') || command.includes('modify product')) {\n      const pattern = /(?:update|modify) product:?\\s*([^,]+),\\s*([^,]+),\\s*([^,]+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        const [_, name, field, value] = match;\n        return `Update product: ${name.trim()}, ${field.trim()}, ${value.trim()}`;\n      }\n    }\n    if (command.includes('delete product') || command.includes('remove product')) {\n      const pattern = /(?:delete|remove) product:?\\s*([^,]+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        return `Delete product: ${match[1].trim()}`;\n      }\n    }\n    if (command.includes('search')) {\n      const pattern = /search\\s+(.+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        return `Search ${match[1].trim()}`;\n      }\n    }\n    if (command.includes('category')) {\n      const pattern = /category\\s+(.+)/i;\n      const match = command.match(pattern);\n      if (match) {\n        return `Category ${match[1].trim()}`;\n      }\n    }\n    if (command.includes('show all') || command.includes('list all')) {\n      return 'Show all products';\n    }\n\n    // If no specific command pattern is matched, return the original transcript\n    return command;\n  };\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      recognitionRef.current = new window.webkitSpeechRecognition();\n      recognitionRef.current.continuous = true;\n      recognitionRef.current.interimResults = true;\n      recognitionRef.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0]).map(result => result.transcript).join('');\n\n        // Format the voice command before setting it as input\n        const formattedCommand = formatVoiceCommand(transcript);\n        setInput(formattedCommand);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsRecording(false);\n      };\n      recognitionRef.current.onend = () => {\n        setIsRecording(false);\n        // If there's input after recording ends, send it automatically\n        if (input.trim()) {\n          handleSend();\n        }\n      };\n    }\n\n    // Add welcome message\n    setMessages([{\n      type: 'bot',\n      content: `Welcome ${user === null || user === void 0 ? void 0 : user.username}! I can help you with:\\n\\n` + '1. Adding products:\\n' + '   \"Add product: [name], [price], [stock], [category]\"\\n\\n' + '2. Updating products:\\n' + '   \"Update product: [name], [field], [new value]\"\\n\\n' + '3. Deleting products:\\n' + '   \"Delete product: [name]\"\\n\\n' + '4. Searching products:\\n' + '   \"Search [product name]\" or \"Category [category]\"\\n\\n' + '5. Viewing all products:\\n' + '   \"Show all products\"\\n\\n' + 'You can also use voice input by clicking the microphone icon!'\n    }]);\n  }, [user]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: userMessage\n    }]);\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage\n        }),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: data.response\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleRecording = () => {\n    if (!recognitionRef.current) {\n      alert('Speech recognition is not supported in your browser.');\n      return;\n    }\n    if (isRecording) {\n      recognitionRef.current.stop();\n      setIsRecording(false);\n    } else {\n      setInput(''); // Clear input before starting new recording\n      recognitionRef.current.start();\n      setIsRecording(true);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      bgcolor: 'background.default',\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        bgcolor: 'rgba(30, 30, 30, 0.9)',\n        backdropFilter: 'blur(10px)',\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderBottom: 1,\n          borderColor: 'divider',\n          bgcolor: 'primary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: 'white'\n          },\n          children: \"Sales Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          flex: 1,\n          overflow: 'auto',\n          p: 2,\n          '& > *': {\n            mb: 2\n          }\n        },\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            flexDirection: 'column',\n            alignItems: message.type === 'user' ? 'flex-end' : 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              p: 2,\n              maxWidth: '80%',\n              bgcolor: message.type === 'user' ? 'primary.main' : 'background.paper',\n              color: message.type === 'user' ? 'white' : 'text.primary',\n              borderRadius: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                whiteSpace: 'pre-line',\n                fontFamily: 'monospace'\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: 'background.paper',\n          display: 'flex',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          disabled: loading,\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              bgcolor: 'background.paper'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: toggleRecording,\n          color: isRecording ? 'error' : 'primary',\n          sx: {\n            bgcolor: 'background.paper'\n          },\n          children: isRecording ? /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSend,\n          disabled: loading || !input.trim(),\n          endIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 77\n          }, this),\n          sx: {\n            minWidth: '100px',\n            background: 'linear-gradient(45deg, #64B5F6 30%, #FF4081 90%)',\n            '&:hover': {\n              background: 'linear-gradient(45deg, #42A5F5 30%, #F50057 90%)'\n            }\n          },\n          children: loading ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"IGJ5mlnKjRoZ+yi77fRGBkF2cT4=\", false, function () {\n  return [useAuth];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","TextField","Button","Paper","Typography","IconButton","CircularProgress","List","ListItem","ListItemText","Divider","SendIcon","MicIcon","StopIcon","useAuth","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","input","setInput","loading","setLoading","isRecording","setIsRecording","messagesEndRef","user","recognitionRef","formatVoiceCommand","transcript","command","toLowerCase","trim","includes","pattern","match","_","name","price","stock","category","field","value","window","current","webkitSpeechRecognition","continuous","interimResults","onresult","event","Array","from","results","map","result","join","formattedCommand","onerror","console","error","onend","handleSend","type","content","username","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","credentials","ok","Error","data","json","toggleRecording","alert","stop","start","handleKeyPress","e","key","shiftKey","preventDefault","sx","height","display","flexDirection","bgcolor","p","children","elevation","flex","overflow","backdropFilter","borderRadius","borderBottom","borderColor","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","mb","index","alignItems","maxWidth","whiteSpace","fontFamily","ref","gap","fullWidth","placeholder","onChange","target","onKeyPress","disabled","onClick","endIcon","size","minWidth","background","_c","$RefreshReg$"],"sources":["C:/Users/singh/Dropbox/CODING/EcommerceChatbot/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    IconButton,\r\n    CircularProgress,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n} from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport StopIcon from '@mui/icons-material/Stop';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ChatInterface = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n    const { user } = useAuth();\r\n    const recognitionRef = useRef(null);\r\n\r\n    const formatVoiceCommand = (transcript) => {\r\n        // Convert transcript to lowercase for easier matching\r\n        const command = transcript.toLowerCase().trim();\r\n        \r\n        // Handle different command patterns\r\n        if (command.includes('add product') || command.includes('create product')) {\r\n            // Extract product details using regex\r\n            const pattern = /(?:add|create) product:?\\s*([^,]+),\\s*(\\d+\\.?\\d*),\\s*(\\d+),\\s*([^,]+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                const [_, name, price, stock, category] = match;\r\n                return `Add product: ${name.trim()}, ${price}, ${stock}, ${category.trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('update product') || command.includes('modify product')) {\r\n            const pattern = /(?:update|modify) product:?\\s*([^,]+),\\s*([^,]+),\\s*([^,]+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                const [_, name, field, value] = match;\r\n                return `Update product: ${name.trim()}, ${field.trim()}, ${value.trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('delete product') || command.includes('remove product')) {\r\n            const pattern = /(?:delete|remove) product:?\\s*([^,]+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                return `Delete product: ${match[1].trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('search')) {\r\n            const pattern = /search\\s+(.+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                return `Search ${match[1].trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('category')) {\r\n            const pattern = /category\\s+(.+)/i;\r\n            const match = command.match(pattern);\r\n            if (match) {\r\n                return `Category ${match[1].trim()}`;\r\n            }\r\n        }\r\n        \r\n        if (command.includes('show all') || command.includes('list all')) {\r\n            return 'Show all products';\r\n        }\r\n        \r\n        // If no specific command pattern is matched, return the original transcript\r\n        return command;\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Initialize speech recognition\r\n        if ('webkitSpeechRecognition' in window) {\r\n            recognitionRef.current = new window.webkitSpeechRecognition();\r\n            recognitionRef.current.continuous = true;\r\n            recognitionRef.current.interimResults = true;\r\n\r\n            recognitionRef.current.onresult = (event) => {\r\n                const transcript = Array.from(event.results)\r\n                    .map(result => result[0])\r\n                    .map(result => result.transcript)\r\n                    .join('');\r\n                \r\n                // Format the voice command before setting it as input\r\n                const formattedCommand = formatVoiceCommand(transcript);\r\n                setInput(formattedCommand);\r\n            };\r\n\r\n            recognitionRef.current.onerror = (event) => {\r\n                console.error('Speech recognition error:', event.error);\r\n                setIsRecording(false);\r\n            };\r\n\r\n            recognitionRef.current.onend = () => {\r\n                setIsRecording(false);\r\n                // If there's input after recording ends, send it automatically\r\n                if (input.trim()) {\r\n                    handleSend();\r\n                }\r\n            };\r\n        }\r\n\r\n        // Add welcome message\r\n        setMessages([\r\n            {\r\n                type: 'bot',\r\n                content: `Welcome ${user?.username}! I can help you with:\\n\\n` +\r\n                    '1. Adding products:\\n' +\r\n                    '   \"Add product: [name], [price], [stock], [category]\"\\n\\n' +\r\n                    '2. Updating products:\\n' +\r\n                    '   \"Update product: [name], [field], [new value]\"\\n\\n' +\r\n                    '3. Deleting products:\\n' +\r\n                    '   \"Delete product: [name]\"\\n\\n' +\r\n                    '4. Searching products:\\n' +\r\n                    '   \"Search [product name]\" or \"Category [category]\"\\n\\n' +\r\n                    '5. Viewing all products:\\n' +\r\n                    '   \"Show all products\"\\n\\n' +\r\n                    'You can also use voice input by clicking the microphone icon!'\r\n            }\r\n        ]);\r\n    }, [user]);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const handleSend = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = input.trim();\r\n        setInput('');\r\n        setMessages(prev => [...prev, { type: 'user', content: userMessage }]);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ message: userMessage }),\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to get response');\r\n            }\r\n\r\n            const data = await response.json();\r\n            setMessages(prev => [...prev, { type: 'bot', content: data.response }]);\r\n        } catch (error) {\r\n            setMessages(prev => [...prev, {\r\n                type: 'bot',\r\n                content: 'Sorry, I encountered an error. Please try again.'\r\n            }]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const toggleRecording = () => {\r\n        if (!recognitionRef.current) {\r\n            alert('Speech recognition is not supported in your browser.');\r\n            return;\r\n        }\r\n\r\n        if (isRecording) {\r\n            recognitionRef.current.stop();\r\n            setIsRecording(false);\r\n        } else {\r\n            setInput(''); // Clear input before starting new recording\r\n            recognitionRef.current.start();\r\n            setIsRecording(true);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSend();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                height: '100vh',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                bgcolor: 'background.default',\r\n                p: 2,\r\n            }}\r\n        >\r\n            <Paper\r\n                elevation={3}\r\n                sx={{\r\n                    flex: 1,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    overflow: 'hidden',\r\n                    bgcolor: 'rgba(30, 30, 30, 0.9)',\r\n                    backdropFilter: 'blur(10px)',\r\n                    borderRadius: 2,\r\n                }}\r\n            >\r\n                <Box\r\n                    sx={{\r\n                        p: 2,\r\n                        borderBottom: 1,\r\n                        borderColor: 'divider',\r\n                        bgcolor: 'primary.main',\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n                        Sales Chatbot\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <List\r\n                    sx={{\r\n                        flex: 1,\r\n                        overflow: 'auto',\r\n                        p: 2,\r\n                        '& > *': { mb: 2 },\r\n                    }}\r\n                >\r\n                    {messages.map((message, index) => (\r\n                        <ListItem\r\n                            key={index}\r\n                            sx={{\r\n                                flexDirection: 'column',\r\n                                alignItems: message.type === 'user' ? 'flex-end' : 'flex-start',\r\n                            }}\r\n                        >\r\n                            <Paper\r\n                                elevation={1}\r\n                                sx={{\r\n                                    p: 2,\r\n                                    maxWidth: '80%',\r\n                                    bgcolor: message.type === 'user' ? 'primary.main' : 'background.paper',\r\n                                    color: message.type === 'user' ? 'white' : 'text.primary',\r\n                                    borderRadius: 2,\r\n                                }}\r\n                            >\r\n                                <Typography\r\n                                    variant=\"body1\"\r\n                                    sx={{\r\n                                        whiteSpace: 'pre-line',\r\n                                        fontFamily: 'monospace',\r\n                                    }}\r\n                                >\r\n                                    {message.content}\r\n                                </Typography>\r\n                            </Paper>\r\n                        </ListItem>\r\n                    ))}\r\n                    <div ref={messagesEndRef} />\r\n                </List>\r\n\r\n                <Divider />\r\n\r\n                <Box\r\n                    sx={{\r\n                        p: 2,\r\n                        bgcolor: 'background.paper',\r\n                        display: 'flex',\r\n                        gap: 1,\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Type your message...\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyPress={handleKeyPress}\r\n                        disabled={loading}\r\n                        sx={{\r\n                            '& .MuiOutlinedInput-root': {\r\n                                bgcolor: 'background.paper',\r\n                            },\r\n                        }}\r\n                    />\r\n                    <IconButton\r\n                        onClick={toggleRecording}\r\n                        color={isRecording ? 'error' : 'primary'}\r\n                        sx={{ bgcolor: 'background.paper' }}\r\n                    >\r\n                        {isRecording ? <StopIcon /> : <MicIcon />}\r\n                    </IconButton>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleSend}\r\n                        disabled={loading || !input.trim()}\r\n                        endIcon={loading ? <CircularProgress size={20} /> : <SendIcon />}\r\n                        sx={{\r\n                            minWidth: '100px',\r\n                            background: 'linear-gradient(45deg, #64B5F6 30%, #FF4081 90%)',\r\n                            '&:hover': {\r\n                                background: 'linear-gradient(45deg, #42A5F5 30%, #F50057 90%)',\r\n                            },\r\n                        }}\r\n                    >\r\n                        {loading ? 'Sending...' : 'Send'}\r\n                    </Button>\r\n                </Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}