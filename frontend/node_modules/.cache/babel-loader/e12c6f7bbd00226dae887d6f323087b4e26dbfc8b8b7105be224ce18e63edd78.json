{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Dropbox\\\\CODING\\\\EcommerceChatbot\\\\frontend\\\\src\\\\components\\\\ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, TextField, Button, Paper, Typography, List, ListItem, ListItemText } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    try {\n      const response = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n\n      // Add bot response to chat\n      const botMessage = {\n        text: data.response,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        text: 'Sorry, I encountered an error. Please try again.',\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      maxWidth: '800px',\n      margin: '0 auto',\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          backgroundColor: 'primary.main',\n          color: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"E-commerce Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          flex: 1,\n          overflow: 'auto',\n          p: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1\n        },\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            alignSelf: message.sender === 'user' ? 'flex-end' : 'flex-start',\n            maxWidth: '70%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              p: 2,\n              backgroundColor: message.sender === 'user' ? 'primary.light' : 'grey.100',\n              color: message.sender === 'user' ? 'white' : 'text.primary',\n              borderRadius: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: message.text,\n              sx: {\n                whiteSpace: 'pre-wrap',\n                wordBreak: 'break-word'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          backgroundColor: 'background.paper',\n          borderTop: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Type your message...\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: handleKeyPress,\n            multiline: true,\n            maxRows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSend,\n            endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 38\n            }, this),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatInterface, \"ub7mF0g0316z3YNHsiLBOML0ce4=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","TextField","Button","Paper","Typography","List","ListItem","ListItemText","SendIcon","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","input","setInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","text","sender","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","error","console","errorMessage","handleKeyPress","event","key","shiftKey","preventDefault","sx","height","display","flexDirection","maxWidth","margin","padding","children","elevation","flex","overflow","p","backgroundColor","color","variant","fileName","_jsxFileName","lineNumber","columnNumber","gap","map","index","alignSelf","borderRadius","primary","whiteSpace","wordBreak","ref","borderTop","borderColor","fullWidth","placeholder","value","onChange","e","target","onKeyPress","multiline","maxRows","onClick","endIcon","_c","$RefreshReg$"],"sources":["C:/Users/singh/Dropbox/CODING/EcommerceChatbot/frontend/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Box, TextField, Button, Paper, Typography, List, ListItem, ListItemText } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nconst ChatInterface = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const messagesEndRef = useRef(null);\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const handleSend = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        // Add user message to chat\r\n        const userMessage = { text: input, sender: 'user' };\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInput('');\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ message: input }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            // Add bot response to chat\r\n            const botMessage = { text: data.response, sender: 'bot' };\r\n            setMessages(prev => [...prev, botMessage]);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            const errorMessage = { text: 'Sorry, I encountered an error. Please try again.', sender: 'bot' };\r\n            setMessages(prev => [...prev, errorMessage]);\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter' && !event.shiftKey) {\r\n            event.preventDefault();\r\n            handleSend();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ \r\n            height: '100vh', \r\n            display: 'flex', \r\n            flexDirection: 'column',\r\n            maxWidth: '800px',\r\n            margin: '0 auto',\r\n            padding: '20px'\r\n        }}>\r\n            <Paper elevation={3} sx={{ \r\n                flex: 1, \r\n                display: 'flex', \r\n                flexDirection: 'column',\r\n                overflow: 'hidden'\r\n            }}>\r\n                <Box sx={{ \r\n                    p: 2, \r\n                    backgroundColor: 'primary.main', \r\n                    color: 'white'\r\n                }}>\r\n                    <Typography variant=\"h6\">E-commerce Assistant</Typography>\r\n                </Box>\r\n                \r\n                <List sx={{ \r\n                    flex: 1, \r\n                    overflow: 'auto',\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    gap: 1\r\n                }}>\r\n                    {messages.map((message, index) => (\r\n                        <ListItem \r\n                            key={index}\r\n                            sx={{\r\n                                alignSelf: message.sender === 'user' ? 'flex-end' : 'flex-start',\r\n                                maxWidth: '70%'\r\n                            }}\r\n                        >\r\n                            <Paper \r\n                                elevation={1}\r\n                                sx={{\r\n                                    p: 2,\r\n                                    backgroundColor: message.sender === 'user' ? 'primary.light' : 'grey.100',\r\n                                    color: message.sender === 'user' ? 'white' : 'text.primary',\r\n                                    borderRadius: 2\r\n                                }}\r\n                            >\r\n                                <ListItemText \r\n                                    primary={message.text}\r\n                                    sx={{ \r\n                                        whiteSpace: 'pre-wrap',\r\n                                        wordBreak: 'break-word'\r\n                                    }}\r\n                                />\r\n                            </Paper>\r\n                        </ListItem>\r\n                    ))}\r\n                    <div ref={messagesEndRef} />\r\n                </List>\r\n\r\n                <Box sx={{ \r\n                    p: 2, \r\n                    backgroundColor: 'background.paper',\r\n                    borderTop: 1,\r\n                    borderColor: 'divider'\r\n                }}>\r\n                    <Box sx={{ display: 'flex', gap: 1 }}>\r\n                        <TextField\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Type your message...\"\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            onKeyPress={handleKeyPress}\r\n                            multiline\r\n                            maxRows={4}\r\n                        />\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            onClick={handleSend}\r\n                            endIcon={<SendIcon />}\r\n                        >\r\n                            Send\r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}