{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\Dropbox\\\\CODING\\\\EcommerceChatbot\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Container, Paper, TextField, IconButton, Typography, CircularProgress, Avatar, Divider, Tooltip } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport MicIcon from '@mui/icons-material/Mic';\nimport SendIcon from '@mui/icons-material/Send';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSpeech } from '../hooks/useSpeech';\nimport chatbotLogo from '../assets/chatbot-logo.svg';\nimport chatbotIcon from '../assets/chatbot.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled(Container)(({\n  theme\n}) => ({\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  backgroundColor: '#1a1a1a',\n  borderRadius: '12px',\n  boxShadow: '0 8px 32px rgba(0,0,0,0.2)',\n  overflow: 'hidden'\n}));\n_c = ChatContainer;\nconst MessagesContainer = styled(Box)(({\n  theme\n}) => ({\n  flex: 1,\n  overflowY: 'auto',\n  padding: theme.spacing(2),\n  display: 'flex',\n  flexDirection: 'column',\n  gap: theme.spacing(2),\n  '&::-webkit-scrollbar': {\n    width: '8px'\n  },\n  '&::-webkit-scrollbar-track': {\n    background: 'rgba(255,255,255,0.1)',\n    borderRadius: '4px'\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: 'rgba(255,255,255,0.2)',\n    borderRadius: '4px',\n    '&:hover': {\n      background: 'rgba(255,255,255,0.3)'\n    }\n  }\n}));\n_c2 = MessagesContainer;\nconst MessageBubble = styled(Box)(({\n  theme,\n  isUser\n}) => ({\n  maxWidth: '80%',\n  padding: theme.spacing(2),\n  borderRadius: '12px',\n  backgroundColor: isUser ? 'rgba(25, 118, 210, 0.1)' : 'rgba(255, 255, 255, 0.05)',\n  border: `1px solid ${isUser ? 'rgba(25, 118, 210, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\n  alignSelf: isUser ? 'flex-end' : 'flex-start',\n  color: '#ffffff',\n  '&:hover': {\n    backgroundColor: isUser ? 'rgba(25, 118, 210, 0.15)' : 'rgba(255, 255, 255, 0.08)'\n  }\n}));\n_c3 = MessageBubble;\nconst InputContainer = styled(Box)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  backgroundColor: 'rgba(255, 255, 255, 0.05)',\n  borderTop: '1px solid rgba(255, 255, 255, 0.1)',\n  display: 'flex',\n  gap: theme.spacing(1),\n  alignItems: 'center'\n}));\n_c4 = InputContainer;\nconst StyledTextField = styled(TextField)(({\n  theme\n}) => ({\n  '& .MuiOutlinedInput-root': {\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\n    color: '#ffffff',\n    '& fieldset': {\n      borderColor: 'rgba(255, 255, 255, 0.1)'\n    },\n    '&:hover fieldset': {\n      borderColor: 'rgba(255, 255, 255, 0.2)'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: theme.palette.primary.main\n    }\n  },\n  '& .MuiInputLabel-root': {\n    color: 'rgba(255, 255, 255, 0.7)'\n  },\n  '& .MuiInputBase-input': {\n    color: '#ffffff'\n  }\n}));\n_c5 = StyledTextField;\nconst TitleBar = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2),\n  backgroundColor: theme.palette.background.paper,\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  borderRadius: '12px 12px 0 0',\n  background: 'linear-gradient(45deg, #1a237e 30%, #0d47a1 90%)'\n}));\n_c6 = TitleBar;\nconst ChatAvatar = styled(Avatar)(({\n  theme\n}) => ({\n  width: 40,\n  height: 40,\n  marginRight: theme.spacing(2),\n  backgroundColor: 'transparent',\n  '& img': {\n    width: '100%',\n    height: '100%'\n  }\n}));\n_c7 = ChatAvatar;\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const messagesEndRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const {\n    user\n  } = useAuth();\n  const {\n    speak,\n    cancel,\n    isSpeaking\n  } = useSpeech();\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      recognitionRef.current = new window.webkitSpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-US';\n      recognitionRef.current.onresult = event => {\n        const text = event.results[0][0].transcript;\n        handleVoiceCommand(text);\n        setIsListening(false);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n  const toggleListening = () => {\n    if (!('webkitSpeechRecognition' in window)) {\n      setMessages(prev => [...prev, {\n        text: 'Voice recognition is not supported in your browser.',\n        isUser: false,\n        timestamp: new Date().toISOString()\n      }]);\n      return;\n    }\n    if (isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    } else {\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n\n  // Fetch categories when component mounts\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('/api/products');\n        const data = await response.json();\n        if (response.ok && data.products) {\n          const uniqueCategories = [...new Set(data.products.map(p => p.category))];\n          setCategories(uniqueCategories);\n        }\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // Add welcome message when component mounts\n  useEffect(() => {\n    setMessages([{\n      text: \"Hello! How can I help you today? I can assist you with:\\n\\n\" + \"1. Viewing products\\n\" + \"2. Searching for specific products\\n\" + \"3. Adding new products\\n\" + \"4. Updating product details\\n\" + \"5. Deleting products\\n\\n\" + \"Available categories:\\n\" + categories.map(cat => `- ${cat}`).join('\\n') + \"\\n\\n\" + \"To select a category, type: 'select category:CategoryName'\\n\" + \"To view products in a category, type: 'show category:CategoryName'\",\n      isUser: false,\n      timestamp: new Date().toISOString()\n    }]);\n  }, [categories]);\n  const handleProductCommand = async message => {\n    const lowerMessage = message.toLowerCase().trim();\n    try {\n      // Select category\n      if (lowerMessage.startsWith('select category:')) {\n        const category = lowerMessage.split('select category:')[1].trim();\n        if (categories.includes(category)) {\n          setSelectedCategory(category);\n          return `Selected category: ${category}`;\n        }\n        return `Category \"${category}\" not found. Available categories:\\n${categories.join('\\n')}`;\n      }\n\n      // Show products by category\n      if (lowerMessage.startsWith('show category:')) {\n        const category = lowerMessage.split('show category:')[1].trim();\n        const response = await fetch(`/api/products/category/${encodeURIComponent(category)}`);\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to fetch products');\n        }\n        const data = await response.json();\n        if (data.products && data.products.length > 0) {\n          return data.products.map(product => `${product.name} - Price: $${product.price} - Stock: ${product.stock}`).join('\\n');\n        }\n        return `No products found in category \"${category}\"`;\n      }\n\n      // List all products\n      if (lowerMessage === 'list products' || lowerMessage === 'show products') {\n        const response = await fetch('/api/products');\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to fetch products');\n        }\n        const data = await response.json();\n        if (data.products) {\n          return data.products.map(product => `${product.name} - Price: $${product.price} - Stock: ${product.stock}`).join('\\n');\n        }\n        return 'No products found in inventory.';\n      }\n\n      // Show specific product\n      if (lowerMessage.startsWith('show') || lowerMessage.startsWith('find') || lowerMessage.startsWith('search')) {\n        const productName = lowerMessage.split(' ').slice(1).join(' ').trim();\n        if (!productName) {\n          return 'Please specify a product name. For example: \"show iPhone\" or \"find iPhone\"';\n        }\n        const response = await fetch(`/api/products/search?name=${encodeURIComponent(productName)}`);\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to search product');\n        }\n        const data = await response.json();\n        if (data.products && data.products.length > 0) {\n          const product = data.products[0];\n          return `Product: ${product.name}\\nPrice: $${product.price}\\nStock: ${product.stock}\\nCategory: ${product.category}`;\n        }\n        return `No product found with name \"${productName}\"`;\n      }\n\n      // Add product\n      if (lowerMessage.startsWith('add')) {\n        const params = lowerMessage.split(' ').slice(1).join(' ');\n        const match = params.match(/name:([^ ]+) price:(\\d+\\.?\\d*) category:([^ ]+) stock:(\\d+)/i);\n        if (!match) {\n          return 'To add a product, use format: \"add name:ProductName price:99.99 category:Category stock:10\"';\n        }\n        const [, name, price, category, stock] = match;\n        const response = await fetch('/api/products', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name,\n            price: parseFloat(price),\n            category,\n            stock: parseInt(stock)\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to add product');\n        }\n        const data = await response.json();\n        return `Product \"${name}\" added successfully!`;\n      }\n\n      // Update product\n      if (lowerMessage.startsWith('update')) {\n        const params = lowerMessage.split(' ').slice(1).join(' ');\n        const match = params.match(/name:([^ ]+) (price:(\\d+\\.?\\d*)|category:([^ ]+)|stock:(\\d+))/i);\n        if (!match) {\n          return 'To update a product, use format:\\n' + '- \"update name:ProductName price:99.99\"\\n' + '- \"update name:ProductName category:NewCategory\"\\n' + '- \"update name:ProductName stock:10\"';\n        }\n        const [, name,, price, category, stock] = match;\n        const updates = {};\n        if (price) updates.price = parseFloat(price);\n        if (category) updates.category = category;\n        if (stock) updates.stock = parseInt(stock);\n        const response = await fetch(`/api/products/update/${encodeURIComponent(name)}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updates)\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to update product');\n        }\n        const data = await response.json();\n        return `Product \"${name}\" updated successfully!`;\n      }\n\n      // Delete product\n      if (lowerMessage.startsWith('delete')) {\n        const productName = lowerMessage.split(' ').slice(1).join(' ').trim();\n        if (!productName) {\n          return 'Please specify a product name. For example: \"delete iPhone\"';\n        }\n        const response = await fetch(`/api/products/delete/${encodeURIComponent(productName)}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to delete product');\n        }\n        const data = await response.json();\n        return `Product \"${productName}\" deleted successfully!`;\n      }\n\n      // Reduce stock\n      if (lowerMessage.startsWith('reduce stock')) {\n        const params = lowerMessage.split(' ').slice(2).join(' ');\n        const match = params.match(/name:([^ ]+) amount:(\\d+)/i);\n        if (!match) {\n          return 'To reduce stock, use format: \"reduce stock name:ProductName amount:5\"';\n        }\n        const [, name, amount] = match;\n        const response = await fetch(`/api/products/reduce-stock/${encodeURIComponent(name)}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            amount: parseInt(amount)\n          })\n        });\n        if (!response.ok) {\n          const error = await response.json();\n          throw new Error(error.error || 'Failed to reduce stock');\n        }\n        const data = await response.json();\n        return `Reduced stock of \"${name}\" by ${amount}. New stock: ${data.stock}`;\n      }\n      return null;\n    } catch (error) {\n      console.error('API Error:', error);\n      return `Error: ${error.message || 'Something went wrong. Please try again.'}`;\n    }\n  };\n  const formatTimestamp = timestamp => {\n    try {\n      const date = new Date(timestamp);\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch (error) {\n      return '';\n    }\n  };\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n    const userMessage = input.trim();\n    setInput('');\n    setIsLoading(true);\n\n    // Add user message\n    const newUserMessage = {\n      text: userMessage,\n      isUser: true,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, newUserMessage]);\n    try {\n      // Check for product commands\n      const productCommand = await handleProductCommand(userMessage);\n      if (productCommand) {\n        setMessages(prev => [...prev, {\n          text: productCommand,\n          isUser: false,\n          timestamp: new Date().toISOString()\n        }]);\n        return;\n      }\n\n      // Send message to backend\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessages(prev => [...prev, {\n          text: data.message,\n          isUser: false,\n          timestamp: new Date().toISOString()\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          text: `Error: ${data.error || 'Something went wrong'}`,\n          isUser: false,\n          timestamp: new Date().toISOString()\n        }]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        text: 'Error: Could not connect to the server',\n        isUser: false,\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleVoiceCommand = text => {\n    const lowerText = text.toLowerCase();\n\n    // Map voice commands to text commands\n    if (lowerText.includes('show all products') || lowerText.includes('list all products')) {\n      setInput('list products');\n    } else if (lowerText.includes('show') || lowerText.includes('find') || lowerText.includes('search')) {\n      const productName = lowerText.split('show').pop().split('find').pop().split('search').pop().trim();\n      setInput(`show ${productName}`);\n    } else if (lowerText.includes('add product')) {\n      const params = lowerText.split('add product').pop().trim();\n      setInput(`add ${params}`);\n    } else if (lowerText.includes('update product')) {\n      const params = lowerText.split('update product').pop().trim();\n      setInput(`update ${params}`);\n    } else if (lowerText.includes('delete product')) {\n      const productName = lowerText.split('delete product').pop().trim();\n      setInput(`delete ${productName}`);\n    } else {\n      setInput(text);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      height: '100vh',\n      py: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(TitleBar, {\n        children: [/*#__PURE__*/_jsxDEV(ChatAvatar, {\n          src: chatbotIcon,\n          alt: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: 'white',\n              fontWeight: 600\n            },\n            children: \"Sales Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              color: 'rgba(255,255,255,0.7)'\n            },\n            children: \"Your AI-powered shopping guide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessagesContainer, {\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n          isUser: message.isUser,\n          sx: {\n            animation: 'fadeIn 0.3s ease-in-out',\n            '@keyframes fadeIn': {\n              '0%': {\n                opacity: 0,\n                transform: 'translateY(10px)'\n              },\n              '100%': {\n                opacity: 1,\n                transform: 'translateY(0)'\n              }\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'flex-start',\n              gap: 1\n            },\n            children: [!message.isUser && /*#__PURE__*/_jsxDEV(ChatAvatar, {\n              src: chatbotIcon,\n              alt: \"Chatbot\",\n              sx: {\n                width: 32,\n                height: 32\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-line',\n                  wordBreak: 'break-word',\n                  lineHeight: 1.5,\n                  color: '#ffffff'\n                },\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                sx: {\n                  display: 'block',\n                  mt: 0.5,\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  fontSize: '0.75rem'\n                },\n                children: formatTimestamp(message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(StyledTextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: handleKeyPress,\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isListening ? \"Stop listening\" : \"Start voice input\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: toggleListening,\n            color: isListening ? \"error\" : \"primary\",\n            sx: {\n              ml: 1,\n              backgroundColor: isListening ? 'rgba(211, 47, 47, 0.1)' : 'rgba(25, 118, 210, 0.1)',\n              '&:hover': {\n                backgroundColor: isListening ? 'rgba(211, 47, 47, 0.2)' : 'rgba(25, 118, 210, 0.2)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Send message\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleSend,\n            disabled: isLoading || !input.trim(),\n            color: \"primary\",\n            sx: {\n              ml: 1,\n              backgroundColor: 'rgba(25, 118, 210, 0.1)',\n              '&:hover': {\n                backgroundColor: 'rgba(25, 118, 210, 0.2)'\n              }\n            },\n            children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"c+YX8EZIM+YMitPagowtQdKPXds=\", false, function () {\n  return [useAuth, useSpeech];\n});\n_c8 = Chat;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"MessagesContainer\");\n$RefreshReg$(_c3, \"MessageBubble\");\n$RefreshReg$(_c4, \"InputContainer\");\n$RefreshReg$(_c5, \"StyledTextField\");\n$RefreshReg$(_c6, \"TitleBar\");\n$RefreshReg$(_c7, \"ChatAvatar\");\n$RefreshReg$(_c8, \"Chat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Container","Paper","TextField","IconButton","Typography","CircularProgress","Avatar","Divider","Tooltip","styled","MicIcon","SendIcon","useAuth","useSpeech","chatbotLogo","chatbotIcon","jsxDEV","_jsxDEV","ChatContainer","theme","height","display","flexDirection","backgroundColor","borderRadius","boxShadow","overflow","_c","MessagesContainer","flex","overflowY","padding","spacing","gap","width","background","_c2","MessageBubble","isUser","maxWidth","border","alignSelf","color","_c3","InputContainer","borderTop","alignItems","_c4","StyledTextField","borderColor","palette","primary","main","_c5","TitleBar","paper","borderBottom","divider","_c6","ChatAvatar","marginRight","_c7","Chat","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","isListening","setIsListening","categories","setCategories","selectedCategory","setSelectedCategory","messagesEndRef","recognitionRef","user","speak","cancel","isSpeaking","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","window","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","text","results","transcript","handleVoiceCommand","onerror","console","error","onend","stop","toggleListening","prev","timestamp","Date","toISOString","start","fetchCategories","response","fetch","data","json","ok","products","uniqueCategories","Set","map","p","category","cat","join","handleProductCommand","message","lowerMessage","toLowerCase","trim","startsWith","split","includes","encodeURIComponent","Error","length","product","name","price","stock","productName","slice","params","match","method","headers","body","JSON","stringify","parseFloat","parseInt","updates","amount","formatTimestamp","date","toLocaleTimeString","hour","minute","handleSend","userMessage","newUserMessage","productCommand","handleKeyPress","e","key","shiftKey","preventDefault","lowerText","pop","sx","py","children","elevation","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","index","animation","opacity","transform","whiteSpace","wordBreak","lineHeight","mt","fontSize","ref","fullWidth","placeholder","value","onChange","target","onKeyPress","disabled","title","onClick","ml","size","_c8","$RefreshReg$"],"sources":["C:/Users/singh/Dropbox/CODING/EcommerceChatbot/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Paper,\r\n  TextField,\r\n  IconButton,\r\n  Typography,\r\n  CircularProgress,\r\n  Avatar,\r\n  Divider,\r\n  Tooltip,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport MicIcon from '@mui/icons-material/Mic';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useSpeech } from '../hooks/useSpeech';\r\nimport chatbotLogo from '../assets/chatbot-logo.svg';\r\nimport chatbotIcon from '../assets/chatbot.svg';\r\n\r\nconst ChatContainer = styled(Container)(({ theme }) => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  backgroundColor: '#1a1a1a',\r\n  borderRadius: '12px',\r\n  boxShadow: '0 8px 32px rgba(0,0,0,0.2)',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nconst MessagesContainer = styled(Box)(({ theme }) => ({\r\n  flex: 1,\r\n  overflowY: 'auto',\r\n  padding: theme.spacing(2),\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: theme.spacing(2),\r\n  '&::-webkit-scrollbar': {\r\n    width: '8px',\r\n  },\r\n  '&::-webkit-scrollbar-track': {\r\n    background: 'rgba(255,255,255,0.1)',\r\n    borderRadius: '4px',\r\n  },\r\n  '&::-webkit-scrollbar-thumb': {\r\n    background: 'rgba(255,255,255,0.2)',\r\n    borderRadius: '4px',\r\n    '&:hover': {\r\n      background: 'rgba(255,255,255,0.3)',\r\n    },\r\n  },\r\n}));\r\n\r\nconst MessageBubble = styled(Box)(({ theme, isUser }) => ({\r\n  maxWidth: '80%',\r\n  padding: theme.spacing(2),\r\n  borderRadius: '12px',\r\n  backgroundColor: isUser ? 'rgba(25, 118, 210, 0.1)' : 'rgba(255, 255, 255, 0.05)',\r\n  border: `1px solid ${isUser ? 'rgba(25, 118, 210, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\r\n  alignSelf: isUser ? 'flex-end' : 'flex-start',\r\n  color: '#ffffff',\r\n  '&:hover': {\r\n    backgroundColor: isUser ? 'rgba(25, 118, 210, 0.15)' : 'rgba(255, 255, 255, 0.08)',\r\n  },\r\n}));\r\n\r\nconst InputContainer = styled(Box)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n  borderTop: '1px solid rgba(255, 255, 255, 0.1)',\r\n  display: 'flex',\r\n  gap: theme.spacing(1),\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst StyledTextField = styled(TextField)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-root': {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.05)',\r\n    color: '#ffffff',\r\n    '& fieldset': {\r\n      borderColor: 'rgba(255, 255, 255, 0.1)',\r\n    },\r\n    '&:hover fieldset': {\r\n      borderColor: 'rgba(255, 255, 255, 0.2)',\r\n    },\r\n    '&.Mui-focused fieldset': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  '& .MuiInputLabel-root': {\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n  },\r\n  '& .MuiInputBase-input': {\r\n    color: '#ffffff',\r\n  },\r\n}));\r\n\r\nconst TitleBar = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2),\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n  borderRadius: '12px 12px 0 0',\r\n  background: 'linear-gradient(45deg, #1a237e 30%, #0d47a1 90%)',\r\n}));\r\n\r\nconst ChatAvatar = styled(Avatar)(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  marginRight: theme.spacing(2),\r\n  backgroundColor: 'transparent',\r\n  '& img': {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n  const recognitionRef = useRef(null);\r\n  const { user } = useAuth();\r\n  const { speak, cancel, isSpeaking } = useSpeech();\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Initialize speech recognition\r\n    if ('webkitSpeechRecognition' in window) {\r\n      recognitionRef.current = new window.webkitSpeechRecognition();\r\n      recognitionRef.current.continuous = false;\r\n      recognitionRef.current.interimResults = false;\r\n      recognitionRef.current.lang = 'en-US';\r\n\r\n      recognitionRef.current.onresult = (event) => {\r\n        const text = event.results[0][0].transcript;\r\n        handleVoiceCommand(text);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n    }\r\n\r\n    return () => {\r\n      if (recognitionRef.current) {\r\n        recognitionRef.current.stop();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const toggleListening = () => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      setMessages(prev => [...prev, {\r\n        text: 'Voice recognition is not supported in your browser.',\r\n        isUser: false,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n      return;\r\n    }\r\n\r\n    if (isListening) {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    } else {\r\n      recognitionRef.current.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  // Fetch categories when component mounts\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('/api/products');\r\n        const data = await response.json();\r\n        if (response.ok && data.products) {\r\n          const uniqueCategories = [...new Set(data.products.map(p => p.category))];\r\n          setCategories(uniqueCategories);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  // Add welcome message when component mounts\r\n  useEffect(() => {\r\n    setMessages([\r\n      {\r\n        text: \"Hello! How can I help you today? I can assist you with:\\n\\n\" +\r\n              \"1. Viewing products\\n\" +\r\n              \"2. Searching for specific products\\n\" +\r\n              \"3. Adding new products\\n\" +\r\n              \"4. Updating product details\\n\" +\r\n              \"5. Deleting products\\n\\n\" +\r\n              \"Available categories:\\n\" +\r\n              categories.map(cat => `- ${cat}`).join('\\n') + \"\\n\\n\" +\r\n              \"To select a category, type: 'select category:CategoryName'\\n\" +\r\n              \"To view products in a category, type: 'show category:CategoryName'\",\r\n        isUser: false,\r\n        timestamp: new Date().toISOString()\r\n      }\r\n    ]);\r\n  }, [categories]);\r\n\r\n  const handleProductCommand = async (message) => {\r\n    const lowerMessage = message.toLowerCase().trim();\r\n    \r\n    try {\r\n        // Select category\r\n        if (lowerMessage.startsWith('select category:')) {\r\n            const category = lowerMessage.split('select category:')[1].trim();\r\n            if (categories.includes(category)) {\r\n                setSelectedCategory(category);\r\n                return `Selected category: ${category}`;\r\n            }\r\n            return `Category \"${category}\" not found. Available categories:\\n${categories.join('\\n')}`;\r\n        }\r\n\r\n        // Show products by category\r\n        if (lowerMessage.startsWith('show category:')) {\r\n            const category = lowerMessage.split('show category:')[1].trim();\r\n            const response = await fetch(`/api/products/category/${encodeURIComponent(category)}`);\r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Failed to fetch products');\r\n            }\r\n            const data = await response.json();\r\n            \r\n            if (data.products && data.products.length > 0) {\r\n                return data.products.map(product => \r\n                    `${product.name} - Price: $${product.price} - Stock: ${product.stock}`\r\n                ).join('\\n');\r\n            }\r\n            return `No products found in category \"${category}\"`;\r\n        }\r\n\r\n        // List all products\r\n        if (lowerMessage === 'list products' || lowerMessage === 'show products') {\r\n            const response = await fetch('/api/products');\r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Failed to fetch products');\r\n            }\r\n            const data = await response.json();\r\n            \r\n            if (data.products) {\r\n                return data.products.map(product => \r\n                    `${product.name} - Price: $${product.price} - Stock: ${product.stock}`\r\n                ).join('\\n');\r\n            }\r\n            return 'No products found in inventory.';\r\n        }\r\n\r\n        // Show specific product\r\n        if (lowerMessage.startsWith('show') || lowerMessage.startsWith('find') || lowerMessage.startsWith('search')) {\r\n            const productName = lowerMessage.split(' ').slice(1).join(' ').trim();\r\n            if (!productName) {\r\n                return 'Please specify a product name. For example: \"show iPhone\" or \"find iPhone\"';\r\n            }\r\n\r\n            const response = await fetch(`/api/products/search?name=${encodeURIComponent(productName)}`);\r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Failed to search product');\r\n            }\r\n            const data = await response.json();\r\n            \r\n            if (data.products && data.products.length > 0) {\r\n                const product = data.products[0];\r\n                return `Product: ${product.name}\\nPrice: $${product.price}\\nStock: ${product.stock}\\nCategory: ${product.category}`;\r\n            }\r\n            return `No product found with name \"${productName}\"`;\r\n        }\r\n\r\n        // Add product\r\n        if (lowerMessage.startsWith('add')) {\r\n            const params = lowerMessage.split(' ').slice(1).join(' ');\r\n            const match = params.match(/name:([^ ]+) price:(\\d+\\.?\\d*) category:([^ ]+) stock:(\\d+)/i);\r\n            \r\n            if (!match) {\r\n                return 'To add a product, use format: \"add name:ProductName price:99.99 category:Category stock:10\"';\r\n            }\r\n\r\n            const [, name, price, category, stock] = match;\r\n            const response = await fetch('/api/products', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ name, price: parseFloat(price), category, stock: parseInt(stock) })\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Failed to add product');\r\n            }\r\n            const data = await response.json();\r\n            return `Product \"${name}\" added successfully!`;\r\n        }\r\n\r\n        // Update product\r\n        if (lowerMessage.startsWith('update')) {\r\n            const params = lowerMessage.split(' ').slice(1).join(' ');\r\n            const match = params.match(/name:([^ ]+) (price:(\\d+\\.?\\d*)|category:([^ ]+)|stock:(\\d+))/i);\r\n            \r\n            if (!match) {\r\n                return 'To update a product, use format:\\n' +\r\n                       '- \"update name:ProductName price:99.99\"\\n' +\r\n                       '- \"update name:ProductName category:NewCategory\"\\n' +\r\n                       '- \"update name:ProductName stock:10\"';\r\n            }\r\n\r\n            const [, name, , price, category, stock] = match;\r\n            const updates = {};\r\n            if (price) updates.price = parseFloat(price);\r\n            if (category) updates.category = category;\r\n            if (stock) updates.stock = parseInt(stock);\r\n\r\n            const response = await fetch(`/api/products/update/${encodeURIComponent(name)}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(updates)\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Failed to update product');\r\n            }\r\n            const data = await response.json();\r\n            return `Product \"${name}\" updated successfully!`;\r\n        }\r\n\r\n        // Delete product\r\n        if (lowerMessage.startsWith('delete')) {\r\n            const productName = lowerMessage.split(' ').slice(1).join(' ').trim();\r\n            if (!productName) {\r\n                return 'Please specify a product name. For example: \"delete iPhone\"';\r\n            }\r\n\r\n            const response = await fetch(`/api/products/delete/${encodeURIComponent(productName)}`, {\r\n                method: 'DELETE'\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Failed to delete product');\r\n            }\r\n            const data = await response.json();\r\n            return `Product \"${productName}\" deleted successfully!`;\r\n        }\r\n\r\n        // Reduce stock\r\n        if (lowerMessage.startsWith('reduce stock')) {\r\n            const params = lowerMessage.split(' ').slice(2).join(' ');\r\n            const match = params.match(/name:([^ ]+) amount:(\\d+)/i);\r\n            \r\n            if (!match) {\r\n                return 'To reduce stock, use format: \"reduce stock name:ProductName amount:5\"';\r\n            }\r\n\r\n            const [, name, amount] = match;\r\n            const response = await fetch(`/api/products/reduce-stock/${encodeURIComponent(name)}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ amount: parseInt(amount) })\r\n            });\r\n            \r\n            if (!response.ok) {\r\n                const error = await response.json();\r\n                throw new Error(error.error || 'Failed to reduce stock');\r\n            }\r\n            const data = await response.json();\r\n            return `Reduced stock of \"${name}\" by ${amount}. New stock: ${data.stock}`;\r\n        }\r\n\r\n        return null;\r\n    } catch (error) {\r\n        console.error('API Error:', error);\r\n        return `Error: ${error.message || 'Something went wrong. Please try again.'}`;\r\n    }\r\n};\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    try {\r\n      const date = new Date(timestamp);\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    } catch (error) {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!input.trim() || isLoading) return;\r\n\r\n    const userMessage = input.trim();\r\n    setInput('');\r\n    setIsLoading(true);\r\n\r\n    // Add user message\r\n    const newUserMessage = {\r\n      text: userMessage,\r\n      isUser: true,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    setMessages(prev => [...prev, newUserMessage]);\r\n\r\n    try {\r\n      // Check for product commands\r\n      const productCommand = await handleProductCommand(userMessage);\r\n      if (productCommand) {\r\n        setMessages(prev => [...prev, {\r\n          text: productCommand,\r\n          isUser: false,\r\n          timestamp: new Date().toISOString()\r\n        }]);\r\n        return;\r\n      }\r\n\r\n      // Send message to backend\r\n      const response = await fetch('/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: userMessage }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (response.ok) {\r\n        setMessages(prev => [...prev, {\r\n          text: data.message,\r\n          isUser: false,\r\n          timestamp: new Date().toISOString()\r\n        }]);\r\n      } else {\r\n        setMessages(prev => [...prev, {\r\n          text: `Error: ${data.error || 'Something went wrong'}`,\r\n          isUser: false,\r\n          timestamp: new Date().toISOString()\r\n        }]);\r\n      }\r\n    } catch (error) {\r\n      setMessages(prev => [...prev, {\r\n        text: 'Error: Could not connect to the server',\r\n        isUser: false,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const handleVoiceCommand = (text) => {\r\n    const lowerText = text.toLowerCase();\r\n    \r\n    // Map voice commands to text commands\r\n    if (lowerText.includes('show all products') || lowerText.includes('list all products')) {\r\n      setInput('list products');\r\n    } else if (lowerText.includes('show') || lowerText.includes('find') || lowerText.includes('search')) {\r\n      const productName = lowerText.split('show').pop().split('find').pop().split('search').pop().trim();\r\n      setInput(`show ${productName}`);\r\n    } else if (lowerText.includes('add product')) {\r\n      const params = lowerText.split('add product').pop().trim();\r\n      setInput(`add ${params}`);\r\n    } else if (lowerText.includes('update product')) {\r\n      const params = lowerText.split('update product').pop().trim();\r\n      setInput(`update ${params}`);\r\n    } else if (lowerText.includes('delete product')) {\r\n      const productName = lowerText.split('delete product').pop().trim();\r\n      setInput(`delete ${productName}`);\r\n    } else {\r\n      setInput(text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ height: '100vh', py: 2 }}>\r\n      <ChatContainer elevation={3}>\r\n        <TitleBar>\r\n          <ChatAvatar src={chatbotIcon} alt=\"Chatbot\" />\r\n          <Box>\r\n            <Typography variant=\"h6\" sx={{ color: 'white', fontWeight: 600 }}>\r\n              Sales Assistant\r\n            </Typography>\r\n            <Typography variant=\"caption\" sx={{ color: 'rgba(255,255,255,0.7)' }}>\r\n              Your AI-powered shopping guide\r\n            </Typography>\r\n          </Box>\r\n        </TitleBar>\r\n\r\n        <MessagesContainer>\r\n          {messages.map((message, index) => (\r\n            <MessageBubble\r\n              key={index}\r\n              isUser={message.isUser}\r\n              sx={{\r\n                animation: 'fadeIn 0.3s ease-in-out',\r\n                '@keyframes fadeIn': {\r\n                  '0%': { opacity: 0, transform: 'translateY(10px)' },\r\n                  '100%': { opacity: 1, transform: 'translateY(0)' }\r\n                }\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 1 }}>\r\n                {!message.isUser && (\r\n                  <ChatAvatar src={chatbotIcon} alt=\"Chatbot\" sx={{ width: 32, height: 32 }} />\r\n                )}\r\n                <Box>\r\n                  <Typography\r\n                    variant=\"body1\"\r\n                    sx={{\r\n                      whiteSpace: 'pre-line',\r\n                      wordBreak: 'break-word',\r\n                      lineHeight: 1.5,\r\n                      color: '#ffffff'\r\n                    }}\r\n                  >\r\n                    {message.text}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                      display: 'block',\r\n                      mt: 0.5,\r\n                      color: 'rgba(255, 255, 255, 0.5)',\r\n                      fontSize: '0.75rem'\r\n                    }}\r\n                  >\r\n                    {formatTimestamp(message.timestamp)}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </MessageBubble>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </MessagesContainer>\r\n\r\n        <InputContainer>\r\n          <StyledTextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            placeholder=\"Type your message...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            disabled={isLoading}\r\n          />\r\n          <Tooltip title={isListening ? \"Stop listening\" : \"Start voice input\"}>\r\n            <IconButton\r\n              onClick={toggleListening}\r\n              color={isListening ? \"error\" : \"primary\"}\r\n              sx={{\r\n                ml: 1,\r\n                backgroundColor: isListening ? 'rgba(211, 47, 47, 0.1)' : 'rgba(25, 118, 210, 0.1)',\r\n                '&:hover': {\r\n                  backgroundColor: isListening ? 'rgba(211, 47, 47, 0.2)' : 'rgba(25, 118, 210, 0.2)',\r\n                },\r\n              }}\r\n            >\r\n              <MicIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Send message\">\r\n            <IconButton\r\n              onClick={handleSend}\r\n              disabled={isLoading || !input.trim()}\r\n              color=\"primary\"\r\n              sx={{\r\n                ml: 1,\r\n                backgroundColor: 'rgba(25, 118, 210, 0.1)',\r\n                '&:hover': {\r\n                  backgroundColor: 'rgba(25, 118, 210, 0.2)',\r\n                },\r\n              }}\r\n            >\r\n              {isLoading ? <CircularProgress size={24} /> : <SendIcon />}\r\n            </IconButton>\r\n          </Tooltip>\r\n        </InputContainer>\r\n      </ChatContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}